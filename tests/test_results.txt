<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


<<< Creating Controller instance
'Controller':
{
    "adminName": "admin", 
    "adminPassword": "admin", 
    "ipAddr": "192.168.59.103", 
    "portNum": "8181", 
    "timeout": 5
}


<<< Get list of YANG models supported by the Controller
YANG models list:
[
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "address-tracker", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:address-tracker", 
        "version": "2014-06-17"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "flow-node-inventory", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:flow:inventory", 
        "version": "2013-08-19"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "ietf-netconf-monitoring", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring", 
        "version": "2010-10-04"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "packet-processing", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:packet:service", 
        "version": "2013-07-09"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "opendaylight-operational-dom-datastore", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:params:xml:ns:yang:controller:md:sal:core:spi:operational-dom-store", 
        "version": "2014-06-17"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "stp-status-aware-node-connector", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:l2switch:loopremover", 
        "version": "2014-07-14"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "openflowplugin-extension-general", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:openflowplugin:extension:general", 
        "version": "2014-07-14"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "yang-ext", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:yang:extension:yang-ext", 
        "version": "2013-07-09"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "system-notifications", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:openflow:system", 
        "version": "2013-09-27"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "config", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:params:xml:ns:yang:controller:config", 
        "version": "2013-04-05"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "opendaylight-topology", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:model:topology:general", 
        "version": "2013-10-30"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "flow-topology-discovery", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:flow:topology:discovery", 
        "version": "2013-08-19"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "sal-port", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:port:service", 
        "version": "2013-11-07"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "network-topology", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:TBD:params:xml:ns:yang:network-topology", 
        "version": "2013-07-12"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "opendaylight-inventory", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:inventory", 
        "version": "2013-08-19"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "opendaylight-inmemory-datastore-provider", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:params:xml:ns:yang:controller:inmemory-datastore-provider", 
        "version": "2014-06-17"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "ietf-inet-types", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:ietf:params:xml:ns:yang:ietf-inet-types", 
        "version": "2010-09-24"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "opendaylight-md-sal-binding", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:params:xml:ns:yang:controller:md:sal:binding", 
        "version": "2013-10-28"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "threadpool", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:params:xml:ns:yang:controller:threadpool", 
        "version": "2013-04-09"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "statistics-manager", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:params:xml:ns:yang:controller:md:sal:statistics-manager", 
        "version": "2014-09-25"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "ipv4-packet", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:packet:ipv4", 
        "version": "2014-05-28"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "openflow-provider-impl", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:params:xml:ns:yang:openflow:common:config:impl", 
        "version": "2014-03-26"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "sal-remote-augment", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:sal:restconf:event:subscription", 
        "version": "2014-07-08"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "opendaylight-action-types", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:action:types", 
        "version": "2013-11-12"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "opendaylight-flow-types", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:flow:types", 
        "version": "2013-10-26"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "opendaylight-group-types", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:group:types", 
        "version": "2013-10-18"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "threadpool-impl-flexible", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:params:xml:ns:yang:controller:threadpool:impl:flexible", 
        "version": "2013-12-01"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "ietf-restconf", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:ietf:params:xml:ns:yang:ietf-restconf", 
        "version": "2013-10-19"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "opendaylight-table-types", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:table:types", 
        "version": "2013-10-26"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "openflow-switch-connection-provider-impl", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:params:xml:ns:yang:openflow:switch:connection:provider:impl", 
        "version": "2014-03-28"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "opendaylight-topology-inventory", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:model:topology:inventory", 
        "version": "2013-10-30"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "opendaylight-l2-types", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:l2:types", 
        "version": "2013-08-27"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "opendaylight-group-statistics", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:group:statistics", 
        "version": "2013-11-11"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "ietf-yang-types", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:ietf:params:xml:ns:yang:ietf-yang-types", 
        "version": "2013-07-15"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "sal-flow", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:flow:service", 
        "version": "2013-08-19"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "threadpool-impl", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:params:xml:ns:yang:controller:threadpool:impl", 
        "version": "2013-04-05"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "sal-remote", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:params:xml:ns:yang:controller:md:sal:remote", 
        "version": "2014-01-14"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "sal-meter", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:meter:service", 
        "version": "2013-09-18"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "opendaylight-topology-view", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:model:topology:view", 
        "version": "2013-10-30"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "netconf-node-inventory", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:netconf-node-inventory", 
        "version": "2014-01-08"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "sal-group", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:group:service", 
        "version": "2013-09-18"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "opendaylight-md-sal-dom", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:params:xml:ns:yang:controller:md:sal:dom", 
        "version": "2013-10-28"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "ethernet-packet", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:packet:ethernet", 
        "version": "2014-05-28"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "opendaylight-sal-binding-broker-impl", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:params:xml:ns:yang:controller:md:sal:binding:impl", 
        "version": "2013-10-28"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "host-tracker-impl", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:l2switch:host-tracker-impl", 
        "version": "2014-05-28"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "openflow-types", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:openflow:common:types", 
        "version": "2013-07-31"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "opendaylight-port-statistics", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:port:statistics", 
        "version": "2013-12-14"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "opendaylight-flow-statistics", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:flow:statistics", 
        "version": "2013-08-19"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "opendaylight-rest-connector", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:params:xml:ns:yang:controller:md:sal:rest:connector", 
        "version": "2014-07-24"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "odl-netconf-cfg", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:params:xml:ns:yang:controller:config:netconf", 
        "version": "2014-04-08"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "openflow-instruction", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:openflow:common:instruction", 
        "version": "2013-07-31"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "sal-table", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:table:service", 
        "version": "2013-10-26"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "opendaylight-port-types", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:flow:types:port", 
        "version": "2013-09-25"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "opendaylight-queue-statistics", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:queue:statistics", 
        "version": "2013-12-16"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "opendaylight-meter-statistics", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:meter:statistics", 
        "version": "2013-11-11"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "network-topology", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:TBD:params:xml:ns:yang:network-topology", 
        "version": "2013-10-21"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "node-error", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:node:error:service", 
        "version": "2014-04-10"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "arp-packet", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:packet:arp", 
        "version": "2014-05-28"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "flow-errors", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:flow:errors", 
        "version": "2013-11-16"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "openflow-protocol", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:openflow:protocol", 
        "version": "2013-07-31"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "ietf-yang-types", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:ietf:params:xml:ns:yang:ietf-yang-types", 
        "version": "2010-09-24"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "threadgroup", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:params:xml:ns:yang:controller:netty:threadgroup", 
        "version": "2013-11-07"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "threadpool-impl-scheduled", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:params:xml:ns:yang:controller:threadpool:impl:scheduled", 
        "version": "2013-12-01"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "shutdown-impl", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:params:xml:ns:yang:controller:shutdown:impl", 
        "version": "2013-12-18"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "openflow-action", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:openflow:common:action", 
        "version": "2013-07-31"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "opendaylight-md-sal-common", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:params:xml:ns:yang:controller:md:sal:common", 
        "version": "2013-10-28"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "opendaylight-sal-dom-broker-impl", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:params:xml:ns:yang:controller:md:sal:dom:impl", 
        "version": "2013-10-28"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "odl-netconfig-client-cfg", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:params:xml:ns:yang:controller:config:netconf:client:dispatcher", 
        "version": "2014-04-08"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "netty", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:params:xml:ns:yang:controller:netty", 
        "version": "2013-11-19"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "loop-remover-impl", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:packet:loop-remover-impl", 
        "version": "2014-05-28"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "opendaylight-meter-types", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:meter:types", 
        "version": "2013-09-18"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "shutdown", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:params:xml:ns:yang:controller:shutdown", 
        "version": "2013-12-18"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "openflow-configuration", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:openflow:config", 
        "version": "2014-06-30"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "openflow-provider", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:params:xml:ns:yang:openflow:common:config", 
        "version": "2014-03-26"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "odl-sal-netconf-connector-cfg", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:params:xml:ns:yang:controller:md:sal:connector:netconf", 
        "version": "2013-10-28"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "ipv6-packet", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:packet:ipv6", 
        "version": "2014-05-28"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "packet-handler-impl", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:packet:packet-handler-impl", 
        "version": "2014-05-28"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "arp-handler-impl", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:packet:arp-handler-impl", 
        "version": "2014-05-28"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "rpc-context", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:ietf:params:xml:ns:yang:rpc-context", 
        "version": "2013-06-17"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "address-tracker-impl", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:packet:address-tracker-impl", 
        "version": "2014-05-28"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "opendaylight-statistics-types", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:model:statistics:types", 
        "version": "2013-09-25"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "protocol-framework", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:params:xml:ns:yang:controller:protocol:framework", 
        "version": "2014-03-13"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "sal-queue", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:queue:service", 
        "version": "2013-11-07"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "openflow-switch-connection-provider", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:params:xml:ns:yang:openflow:switch:connection:provider", 
        "version": "2014-03-28"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "openflow-extensible-match", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:openflow:oxm", 
        "version": "2013-07-31"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "netty-timer", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:params:xml:ns:yang:controller:netty:timer", 
        "version": "2013-11-19"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "netty-event-executor", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:params:xml:ns:yang:controller:netty:eventexecutor", 
        "version": "2013-11-12"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "ietf-netconf-monitoring-extension", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring-extension", 
        "version": "2013-12-10"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "host-tracker-service", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:host-tracker", 
        "version": "2014-06-24"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "base-packet", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:packet:basepacket", 
        "version": "2014-05-28"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "opendaylight-match-types", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:model:match:types", 
        "version": "2013-10-26"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "openflow-augments", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:openflow:augments", 
        "version": "2013-10-02"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "opendaylight-config-dom-datastore", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:params:xml:ns:yang:controller:md:sal:core:spi:config-dom-store", 
        "version": "2014-06-17"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "opendaylight-flow-table-statistics", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:flow:table:statistics", 
        "version": "2013-12-15"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "threadpool-impl-fixed", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:params:xml:ns:yang:controller:threadpool:impl:fixed", 
        "version": "2013-12-01"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "opendaylight-queue-types", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:flow:types:queue", 
        "version": "2013-09-25"
    }, 
    {
        "format": "ietf-netconf-monitoring:yang", 
        "identifier": "flow-capable-transaction", 
        "location": [
            "NETCONF"
        ], 
        "namespace": "urn:opendaylight:flow:transaction", 
        "version": "2013-11-03"
    }
]


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


<<< Creating Controller instance
'Controller':
{
    "adminName": "admin", 
    "adminPassword": "admin", 
    "ipAddr": "192.168.59.103", 
    "portNum": "8181", 
    "timeout": 5
}


<<< Show NETCONF nodes configured on the Controller
Nodes configured:
   'controller-config'


<<< Creating new 'fake-device' NETCONF node
'fake-device':
{
    "adminName": "fake-device-uname", 
    "adminPassword": "fake-device-pswd", 
    "ctrl": {
        "adminName": "admin", 
        "adminPassword": "admin", 
        "ipAddr": "192.168.59.103", 
        "portNum": "8181", 
        "timeout": 5
    }, 
    "ipAddr": "1.2.3.4", 
    "name": "fake-device", 
    "portNum": 830, 
    "tcpOnly": false
}


<<< Add 'fake-device' NETCONF node to the Controller
'fake-device' NETCONF node was successfully added to the Controller


<<< Show NETCONF nodes configured on the Controller
Nodes configured:
   'controller-config'
   'fake-device'


<<< Find the 'fake-device' NETCONF node on the Controller
'fake-device' node is configured


<<< Show connection status for all NETCONF nodes configured on the Controller
Nodes connection status:
   'controller-config' is connected
   'fake-device' is not connected


<<< Show connection status for the 'fake-device' NETCONF node
'fake-device' node is not connected


>>> Remove 'fake-device' NETCONF node from the Controller
'fake-device' NETCONF node was successfully removed from the Controller


<<< Show NETCONF nodes configured on the Controller
Nodes configured:
   'controller-config'


<<< Show connection status for the 'fake-device' NETCONF node
'fake-device' node is not found


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


<<< Creating Controller instance
'Controller':
{
    "adminName": "admin", 
    "adminPassword": "admin", 
    "ipAddr": "192.168.59.103", 
    "portNum": "8181", 
    "timeout": 5
}


<<< Retrieve 'flow-topology-discovery' YANG model definition from the Controller
YANG model:
module flow-topology-discovery {
    namespace "urn:opendaylight:flow:topology:discovery";
    prefix flow-node-topo;

    import opendaylight-inventory {prefix inv;revision-date "2013-08-19";}
    
    revision "2013-08-19" {
        description "Flow Capable Node extensions to the Inventory model";
    }
    

    grouping link {
        leaf source {
            type inv:node-connector-ref;
        }
        leaf destination {
            type inv:node-connector-ref;
        }
    }


    notification link-discovered {
        uses link;
    }
    
    notification link-overutilized {
        uses link;
    }
    
    notification link-removed {
        uses link;
    }
    
    notification link-utilization-normal {
        uses link;
    }

    rpc solicit-refresh {
    
    }

}


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


<<< Creating Controller instance
'Controller':
{
    "adminName": "admin", 
    "adminPassword": "admin", 
    "ipAddr": "192.168.59.103", 
    "portNum": "8181", 
    "timeout": 5
}


<<< Get list of service provider applications available on the Controller
Service providers:
[
    {
        "instance": [
            {
                "name": "operational-store-service", 
                "provider": "/modules/module[type='inmemory-operational-datastore-provider'][name='operational-store-service']"
            }
        ], 
        "type": "opendaylight-operational-dom-datastore:operational-dom-datastore"
    }, 
    {
        "instance": [
            {
                "name": "runtime-mapping-singleton", 
                "provider": "/modules/module[type='runtime-generated-mapping'][name='runtime-mapping-singleton']"
            }
        ], 
        "type": "opendaylight-sal-binding-broker-impl:binding-dom-mapping-service"
    }, 
    {
        "instance": [
            {
                "name": "global-event-executor", 
                "provider": "/modules/module[type='netty-global-event-executor'][name='singleton']"
            }
        ], 
        "type": "netty:netty-event-executor"
    }, 
    {
        "instance": [
            {
                "name": "global-netconf-dispatcher", 
                "provider": "/modules/module[type='netconf-client-dispatcher'][name='global-netconf-dispatcher']"
            }
        ], 
        "type": "odl-netconf-cfg:netconf-client-dispatcher"
    }, 
    {
        "instance": [
            {
                "name": "openflow-provider", 
                "provider": "/modules/module[type='openflow-provider-impl'][name='openflow-provider-impl']"
            }
        ], 
        "type": "openflow-provider:openflow-provider"
    }, 
    {
        "instance": [
            {
                "name": "binding-rpc-broker", 
                "provider": "/modules/module[type='binding-broker-impl'][name='binding-broker-impl']"
            }
        ], 
        "type": "opendaylight-md-sal-binding:binding-rpc-registry"
    }, 
    {
        "instance": [
            {
                "name": "config-store-service", 
                "provider": "/modules/module[type='inmemory-config-datastore-provider'][name='config-store-service']"
            }
        ], 
        "type": "opendaylight-config-dom-datastore:config-dom-datastore"
    }, 
    {
        "instance": [
            {
                "name": "msg-spy-service", 
                "provider": "/modules/module[type='msg-spy-service-impl'][name='msg-spy-service-impl']"
            }
        ], 
        "type": "openflow-provider-impl:msg-spy-service"
    }, 
    {
        "instance": [
            {
                "name": "binding-data-broker", 
                "provider": "/modules/module[type='binding-data-compatible-broker'][name='inmemory-binding-data-broker']"
            }
        ], 
        "type": "opendaylight-md-sal-binding:binding-data-broker"
    }, 
    {
        "instance": [
            {
                "name": "rest-connector-default", 
                "provider": "/modules/module[type='rest-connector-impl'][name='rest-connector-default-impl']"
            }
        ], 
        "type": "opendaylight-rest-connector:rest-connector"
    }, 
    {
        "instance": [
            {
                "name": "binding-data-broker", 
                "provider": "/modules/module[type='binding-forwarded-data-broker'][name='binding-async-data-broker']"
            }
        ], 
        "type": "opendaylight-md-sal-binding:binding-async-data-broker"
    }, 
    {
        "instance": [
            {
                "name": "openflow-switch-connection-provider-default", 
                "provider": "/modules/module[type='openflow-switch-connection-provider-impl'][name='openflow-switch-connection-provider-default-impl']"
            }, 
            {
                "name": "openflow-switch-connection-provider-legacy", 
                "provider": "/modules/module[type='openflow-switch-connection-provider-impl'][name='openflow-switch-connection-provider-legacy-impl']"
            }
        ], 
        "type": "openflow-switch-connection-provider:openflow-switch-connection-provider"
    }, 
    {
        "instance": [
            {
                "name": "global-timer", 
                "provider": "/modules/module[type='netty-hashed-wheel-timer'][name='global-timer']"
            }
        ], 
        "type": "netty:netty-timer"
    }, 
    {
        "instance": [
            {
                "name": "binding-notification-broker", 
                "provider": "/modules/module[type='binding-notification-broker'][name='binding-notification-broker']"
            }
        ], 
        "type": "opendaylight-md-sal-binding:binding-notification-service"
    }, 
    {
        "instance": [
            {
                "name": "global-netconf-processing-executor-threadfactory", 
                "provider": "/modules/module[type='threadfactory-naming'][name='global-netconf-processing-executor-threadfactory']"
            }
        ], 
        "type": "threadpool:threadfactory"
    }, 
    {
        "instance": [
            {
                "name": "inmemory-data-broker", 
                "provider": "/modules/module[type='dom-inmemory-data-broker'][name='inmemory-data-broker']"
            }
        ], 
        "type": "opendaylight-md-sal-dom:dom-async-data-broker"
    }, 
    {
        "instance": [
            {
                "name": "global-netconf-processing-executor", 
                "provider": "/modules/module[type='threadpool-flexible'][name='global-netconf-processing-executor']"
            }
        ], 
        "type": "threadpool:threadpool"
    }, 
    {
        "instance": [
            {
                "name": "binding-osgi-broker", 
                "provider": "/modules/module[type='binding-broker-impl'][name='binding-broker-impl']"
            }
        ], 
        "type": "opendaylight-md-sal-binding:binding-broker-osgi-registry"
    }, 
    {
        "instance": [
            {
                "name": "yang-schema-service", 
                "provider": "/modules/module[type='schema-service-singleton'][name='yang-schema-service']"
            }
        ], 
        "type": "opendaylight-md-sal-dom:schema-service"
    }, 
    {
        "instance": [
            {
                "name": "dom-broker", 
                "provider": "/modules/module[type='dom-broker-impl'][name='inmemory-dom-broker']"
            }
        ], 
        "type": "opendaylight-md-sal-dom:dom-broker-osgi-registry"
    }, 
    {
        "instance": [
            {
                "name": "global-boss-group", 
                "provider": "/modules/module[type='netty-threadgroup-fixed'][name='global-boss-group']"
            }, 
            {
                "name": "global-worker-group", 
                "provider": "/modules/module[type='netty-threadgroup-fixed'][name='global-worker-group']"
            }
        ], 
        "type": "netty:netty-threadgroup"
    }
]


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


<<< Creating Controller instance
'Controller':
{
    "adminName": "admin", 
    "adminPassword": "admin", 
    "ipAddr": "192.168.59.103", 
    "portNum": "8181", 
    "timeout": 5
}


<<< Get 'opendaylight-md-sal-binding:binding-data-broker' service provider info
Service provider:
[
    {
        "instance": [
            {
                "name": "binding-data-broker", 
                "provider": "/modules/module[type='binding-data-compatible-broker'][name='inmemory-binding-data-broker']"
            }
        ], 
        "type": "opendaylight-md-sal-binding:binding-data-broker"
    }
]


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


<<< Creating Controller instance
'Controller':
{
    "adminName": "admin", 
    "adminPassword": "admin", 
    "ipAddr": "192.168.59.103", 
    "portNum": "8181", 
    "timeout": 5
}


<<< Show list of all NETCONF operations supported by the Controller
NETCONF operations:
{
    "flow-capable-transaction:finish-transaction": [
        null
    ], 
    "flow-capable-transaction:get-next-transaction-id": [
        null
    ], 
    "flow-topology-discovery:solicit-refresh": [
        null
    ], 
    "ietf-netconf-monitoring:get-schema": [
        null
    ], 
    "opendaylight-flow-statistics:get-aggregate-flow-statistics-from-flow-table-for-all-flows": [
        null
    ], 
    "opendaylight-flow-statistics:get-aggregate-flow-statistics-from-flow-table-for-given-match": [
        null
    ], 
    "opendaylight-flow-statistics:get-all-flow-statistics-from-flow-table": [
        null
    ], 
    "opendaylight-flow-statistics:get-all-flows-statistics-from-all-flow-tables": [
        null
    ], 
    "opendaylight-flow-statistics:get-flow-statistics-from-flow-table": [
        null
    ], 
    "opendaylight-flow-table-statistics:get-flow-tables-statistics": [
        null
    ], 
    "opendaylight-group-statistics:get-all-group-statistics": [
        null
    ], 
    "opendaylight-group-statistics:get-group-description": [
        null
    ], 
    "opendaylight-group-statistics:get-group-features": [
        null
    ], 
    "opendaylight-group-statistics:get-group-statistics": [
        null
    ], 
    "opendaylight-meter-statistics:get-all-meter-config-statistics": [
        null
    ], 
    "opendaylight-meter-statistics:get-all-meter-statistics": [
        null
    ], 
    "opendaylight-meter-statistics:get-meter-features": [
        null
    ], 
    "opendaylight-meter-statistics:get-meter-statistics": [
        null
    ], 
    "opendaylight-port-statistics:get-all-node-connectors-statistics": [
        null
    ], 
    "opendaylight-port-statistics:get-node-connector-statistics": [
        null
    ], 
    "opendaylight-queue-statistics:get-all-queues-statistics-from-all-ports": [
        null
    ], 
    "opendaylight-queue-statistics:get-all-queues-statistics-from-given-port": [
        null
    ], 
    "opendaylight-queue-statistics:get-queue-statistics-from-given-port": [
        null
    ], 
    "openflow-protocol:barrier": [
        null
    ], 
    "openflow-protocol:echo": [
        null
    ], 
    "openflow-protocol:echo-reply": [
        null
    ], 
    "openflow-protocol:experimenter": [
        null
    ], 
    "openflow-protocol:flow-mod": [
        null
    ], 
    "openflow-protocol:get-async": [
        null
    ], 
    "openflow-protocol:get-config": [
        null
    ], 
    "openflow-protocol:get-features": [
        null
    ], 
    "openflow-protocol:get-queue-config": [
        null
    ], 
    "openflow-protocol:group-mod": [
        null
    ], 
    "openflow-protocol:hello": [
        null
    ], 
    "openflow-protocol:meter-mod": [
        null
    ], 
    "openflow-protocol:multipart-request": [
        null
    ], 
    "openflow-protocol:packet-out": [
        null
    ], 
    "openflow-protocol:port-mod": [
        null
    ], 
    "openflow-protocol:role-request": [
        null
    ], 
    "openflow-protocol:set-async": [
        null
    ], 
    "openflow-protocol:set-config": [
        null
    ], 
    "openflow-protocol:table-mod": [
        null
    ], 
    "openflow-provider-impl:make-msg-statistics": [
        null
    ], 
    "packet-processing:transmit-packet": [
        null
    ], 
    "sal-flow:add-flow": [
        null
    ], 
    "sal-flow:remove-flow": [
        null
    ], 
    "sal-flow:update-flow": [
        null
    ], 
    "sal-group:add-group": [
        null
    ], 
    "sal-group:remove-group": [
        null
    ], 
    "sal-group:update-group": [
        null
    ], 
    "sal-meter:add-meter": [
        null
    ], 
    "sal-meter:remove-meter": [
        null
    ], 
    "sal-meter:update-meter": [
        null
    ], 
    "sal-port:update-port": [
        null
    ], 
    "sal-queue:get-queue": [
        null
    ], 
    "sal-remote:begin-transaction": [
        null
    ], 
    "sal-remote:create-data-change-event-subscription": [
        null
    ], 
    "sal-remote:create-notification-stream": [
        null
    ], 
    "sal-table:update-table": [
        null
    ], 
    "shutdown-impl:shutdown": [
        null
    ], 
    "threadpool-impl:get-dead-events-count": [
        null
    ]
}


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


<<< Creating Controller instance
'Controller':
{
    "adminName": "admin", 
    "adminPassword": "admin", 
    "ipAddr": "192.168.59.103", 
    "portNum": "8181", 
    "timeout": 5
}


<<< Show all configuration modules on the Controller
Modules:
[
    {
        "name": "packet-handler-impl", 
        "packet-handler-impl:notification-service": {
            "name": "binding-notification-broker", 
            "type": "opendaylight-md-sal-binding:binding-notification-service"
        }, 
        "type": "packet-handler-impl:packet-handler-impl"
    }, 
    {
        "host-tracker-impl:data-broker": {
            "name": "binding-data-broker", 
            "type": "opendaylight-md-sal-binding:binding-async-data-broker"
        }, 
        "host-tracker-impl:notification-service": {
            "name": "binding-notification-broker", 
            "type": "opendaylight-md-sal-binding:binding-notification-service"
        }, 
        "host-tracker-impl:topology-id": "flow:1", 
        "name": "host-tracker-impl", 
        "type": "host-tracker-impl:host-tracker-impl"
    }, 
    {
        "name": "config-store-service", 
        "opendaylight-inmemory-datastore-provider:inmemory-config-datastore-provider": {
            "debug-transactions": false, 
            "max-data-change-executor-pool-size": 20, 
            "max-data-change-executor-queue-size": 1000, 
            "max-data-change-listener-queue-size": 1000, 
            "max-data-store-executor-queue-size": 5000, 
            "schema-service": {
                "name": "yang-schema-service", 
                "type": "opendaylight-md-sal-dom:schema-service"
            }
        }, 
        "type": "opendaylight-inmemory-datastore-provider:inmemory-config-datastore-provider"
    }, 
    {
        "name": "global-worker-group", 
        "type": "threadgroup:netty-threadgroup-fixed"
    }, 
    {
        "name": "singleton", 
        "type": "netty-event-executor:netty-global-event-executor"
    }, 
    {
        "name": "inmemory-binding-data-broker", 
        "opendaylight-sal-binding-broker-impl:binding-mapping-service": {
            "name": "runtime-mapping-singleton", 
            "type": "opendaylight-sal-binding-broker-impl:binding-dom-mapping-service"
        }, 
        "opendaylight-sal-binding-broker-impl:dom-async-broker": {
            "name": "dom-broker", 
            "type": "opendaylight-md-sal-dom:dom-broker-osgi-registry"
        }, 
        "type": "opendaylight-sal-binding-broker-impl:binding-data-compatible-broker"
    }, 
    {
        "name": "global-boss-group", 
        "type": "threadgroup:netty-threadgroup-fixed"
    }, 
    {
        "name": "operational-store-service", 
        "opendaylight-inmemory-datastore-provider:inmemory-operational-datastore-provider": {
            "debug-transactions": false, 
            "max-data-change-executor-pool-size": 20, 
            "max-data-change-executor-queue-size": 1000, 
            "max-data-change-listener-queue-size": 1000, 
            "max-data-store-executor-queue-size": 5000, 
            "schema-service": {
                "name": "yang-schema-service", 
                "type": "opendaylight-md-sal-dom:schema-service"
            }
        }, 
        "type": "opendaylight-inmemory-datastore-provider:inmemory-operational-datastore-provider"
    }, 
    {
        "name": "openflow-switch-connection-provider-legacy-impl", 
        "openflow-switch-connection-provider-impl:port": 6653, 
        "openflow-switch-connection-provider-impl:switch-idle-timeout": 15000, 
        "openflow-switch-connection-provider-impl:transport-protocol": "TCP", 
        "type": "openflow-switch-connection-provider-impl:openflow-switch-connection-provider-impl"
    }, 
    {
        "address-tracker-impl:data-broker": {
            "name": "binding-data-broker", 
            "type": "opendaylight-md-sal-binding:binding-async-data-broker"
        }, 
        "address-tracker-impl:notification-service": {
            "name": "binding-notification-broker", 
            "type": "opendaylight-md-sal-binding:binding-notification-service"
        }, 
        "address-tracker-impl:observe-addresses-from": "arp", 
        "address-tracker-impl:timestamp-update-interval": 900000, 
        "name": "adress-tracker-impl", 
        "type": "address-tracker-impl:address-tracker-impl"
    }, 
    {
        "name": "binding-async-data-broker", 
        "opendaylight-sal-binding-broker-impl:binding-forwarded-data-broker": {
            "binding-mapping-service": {
                "name": "runtime-mapping-singleton", 
                "type": "opendaylight-sal-binding-broker-impl:binding-dom-mapping-service"
            }, 
            "dom-async-broker": {
                "name": "dom-broker", 
                "type": "opendaylight-md-sal-dom:dom-broker-osgi-registry"
            }
        }, 
        "type": "opendaylight-sal-binding-broker-impl:binding-forwarded-data-broker"
    }, 
    {
        "name": "global-timer", 
        "type": "netty-timer:netty-hashed-wheel-timer"
    }, 
    {
        "name": "runtime-mapping-singleton", 
        "type": "opendaylight-sal-binding-broker-impl:runtime-generated-mapping"
    }, 
    {
        "loop-remover-impl:data-broker": {
            "name": "binding-data-broker", 
            "type": "opendaylight-md-sal-binding:binding-async-data-broker"
        }, 
        "loop-remover-impl:graph-refresh-delay": 1000, 
        "loop-remover-impl:is-install-lldp-flow": true, 
        "loop-remover-impl:lldp-flow-hard-timeout": 0, 
        "loop-remover-impl:lldp-flow-idle-timeout": 0, 
        "loop-remover-impl:lldp-flow-priority": 100, 
        "loop-remover-impl:lldp-flow-table-id": 0, 
        "loop-remover-impl:notification-service": {
            "name": "binding-notification-broker", 
            "type": "opendaylight-md-sal-binding:binding-notification-service"
        }, 
        "loop-remover-impl:rpc-registry": {
            "name": "binding-rpc-broker", 
            "type": "opendaylight-md-sal-binding:binding-rpc-registry"
        }, 
        "loop-remover-impl:topology-id": "flow:1", 
        "name": "loop-remover-impl", 
        "type": "loop-remover-impl:loop-remover-impl"
    }, 
    {
        "name": "openflow-switch-connection-provider-default-impl", 
        "openflow-switch-connection-provider-impl:port": 6633, 
        "openflow-switch-connection-provider-impl:switch-idle-timeout": 15000, 
        "openflow-switch-connection-provider-impl:transport-protocol": "TCP", 
        "type": "openflow-switch-connection-provider-impl:openflow-switch-connection-provider-impl"
    }, 
    {
        "name": "openflow-provider-impl", 
        "openflow-provider-impl:binding-aware-broker": {
            "name": "binding-osgi-broker", 
            "type": "opendaylight-md-sal-binding:binding-broker-osgi-registry"
        }, 
        "openflow-provider-impl:openflow-switch-connection-provider": [
            {
                "name": "openflow-switch-connection-provider-default", 
                "type": "openflow-switch-connection-provider:openflow-switch-connection-provider"
            }, 
            {
                "name": "openflow-switch-connection-provider-legacy", 
                "type": "openflow-switch-connection-provider:openflow-switch-connection-provider"
            }
        ], 
        "type": "openflow-provider-impl:openflow-provider-impl"
    }, 
    {
        "name": "binding-broker-impl", 
        "opendaylight-sal-binding-broker-impl:data-broker": {
            "name": "binding-data-broker", 
            "type": "opendaylight-md-sal-binding:binding-data-broker"
        }, 
        "opendaylight-sal-binding-broker-impl:notification-service": {
            "name": "binding-notification-broker", 
            "type": "opendaylight-md-sal-binding:binding-notification-service"
        }, 
        "opendaylight-sal-binding-broker-impl:root-data-broker": {
            "name": "binding-data-broker", 
            "type": "opendaylight-md-sal-binding:binding-async-data-broker"
        }, 
        "type": "opendaylight-sal-binding-broker-impl:binding-broker-impl"
    }, 
    {
        "name": "inmemory-data-broker", 
        "opendaylight-sal-dom-broker-impl:allow-concurrent-commits": false, 
        "opendaylight-sal-dom-broker-impl:config-data-store": {
            "name": "config-store-service", 
            "type": "opendaylight-config-dom-datastore:config-dom-datastore"
        }, 
        "opendaylight-sal-dom-broker-impl:max-data-broker-commit-queue-size": 5000, 
        "opendaylight-sal-dom-broker-impl:max-data-broker-future-callback-pool-size": 20, 
        "opendaylight-sal-dom-broker-impl:max-data-broker-future-callback-queue-size": 1000, 
        "opendaylight-sal-dom-broker-impl:operational-data-store": {
            "name": "operational-store-service", 
            "type": "opendaylight-operational-dom-datastore:operational-dom-datastore"
        }, 
        "opendaylight-sal-dom-broker-impl:schema-service": {
            "name": "yang-schema-service", 
            "type": "opendaylight-md-sal-dom:schema-service"
        }, 
        "type": "opendaylight-sal-dom-broker-impl:dom-inmemory-data-broker"
    }, 
    {
        "name": "global-netconf-processing-executor-threadfactory", 
        "threadpool-impl:name-prefix": "remote-connector-processing-executor", 
        "type": "threadpool-impl:threadfactory-naming"
    }, 
    {
        "name": "shutdown", 
        "shutdown-impl:secret": "", 
        "type": "shutdown-impl:shutdown"
    }, 
    {
        "name": "statistics-manager", 
        "statistics-manager:data-broker": {
            "name": "binding-data-broker", 
            "type": "opendaylight-md-sal-binding:binding-async-data-broker"
        }, 
        "statistics-manager:notification-service": {
            "name": "binding-notification-broker", 
            "type": "opendaylight-md-sal-binding:binding-notification-service"
        }, 
        "statistics-manager:rpc-registry": {
            "name": "binding-rpc-broker", 
            "type": "opendaylight-md-sal-binding:binding-rpc-registry"
        }, 
        "statistics-manager:statistics-manager-settings": {
            "max-nodes-for-collector": 16, 
            "min-request-net-monitor-interval": 3000
        }, 
        "type": "statistics-manager:statistics-manager"
    }, 
    {
        "name": "global-netconf-dispatcher", 
        "odl-netconfig-client-cfg:boss-thread-group": {
            "name": "global-boss-group", 
            "type": "netty:netty-threadgroup"
        }, 
        "odl-netconfig-client-cfg:timer": {
            "name": "global-timer", 
            "type": "netty:netty-timer"
        }, 
        "odl-netconfig-client-cfg:worker-thread-group": {
            "name": "global-worker-group", 
            "type": "netty:netty-threadgroup"
        }, 
        "type": "odl-netconfig-client-cfg:netconf-client-dispatcher"
    }, 
    {
        "name": "yang-schema-service", 
        "type": "opendaylight-sal-dom-broker-impl:schema-service-singleton"
    }, 
    {
        "name": "rest-connector-default-impl", 
        "opendaylight-rest-connector:config": {
            "get": {
                "received-requests": 281
            }, 
            "post": {
                "received-requests": 6
            }, 
            "put": {
                "received-requests": 190
            }
        }, 
        "opendaylight-rest-connector:dom-broker": {
            "name": "dom-broker", 
            "type": "opendaylight-md-sal-dom:dom-broker-osgi-registry"
        }, 
        "opendaylight-rest-connector:operational": {
            "get": {
                "received-requests": 199
            }
        }, 
        "opendaylight-rest-connector:rpcs": {
            "received-requests": 5
        }, 
        "opendaylight-rest-connector:websocket-port": 8185, 
        "type": "opendaylight-rest-connector:rest-connector-impl"
    }, 
    {
        "name": "global-netconf-processing-executor", 
        "threadpool-impl-flexible:keepAliveMillis": 600000, 
        "threadpool-impl-flexible:max-thread-count": 4, 
        "threadpool-impl-flexible:minThreadCount": 1, 
        "threadpool-impl-flexible:threadFactory": {
            "name": "global-netconf-processing-executor-threadfactory", 
            "type": "threadpool:threadfactory"
        }, 
        "type": "threadpool-impl-flexible:threadpool-flexible"
    }, 
    {
        "name": "controller-config", 
        "odl-sal-netconf-connector-cfg:address": "127.0.0.1", 
        "odl-sal-netconf-connector-cfg:between-attempts-timeout-millis": 2000, 
        "odl-sal-netconf-connector-cfg:binding-registry": {
            "name": "binding-osgi-broker", 
            "type": "opendaylight-md-sal-binding:binding-broker-osgi-registry"
        }, 
        "odl-sal-netconf-connector-cfg:client-dispatcher": {
            "name": "global-netconf-dispatcher", 
            "type": "odl-netconf-cfg:netconf-client-dispatcher"
        }, 
        "odl-sal-netconf-connector-cfg:connection-timeout-millis": 20000, 
        "odl-sal-netconf-connector-cfg:dom-registry": {
            "name": "dom-broker", 
            "type": "opendaylight-md-sal-dom:dom-broker-osgi-registry"
        }, 
        "odl-sal-netconf-connector-cfg:event-executor": {
            "name": "global-event-executor", 
            "type": "netty:netty-event-executor"
        }, 
        "odl-sal-netconf-connector-cfg:max-connection-attempts": 0, 
        "odl-sal-netconf-connector-cfg:password": "admin", 
        "odl-sal-netconf-connector-cfg:port": 1830, 
        "odl-sal-netconf-connector-cfg:processing-executor": {
            "name": "global-netconf-processing-executor", 
            "type": "threadpool:threadpool"
        }, 
        "odl-sal-netconf-connector-cfg:sleep-factor": 1.5, 
        "odl-sal-netconf-connector-cfg:tcp-only": false, 
        "odl-sal-netconf-connector-cfg:username": "admin", 
        "type": "odl-sal-netconf-connector-cfg:sal-netconf-connector"
    }, 
    {
        "arp-handler-impl:arp-flow-hard-timeout": 0, 
        "arp-handler-impl:arp-flow-idle-timeout": 0, 
        "arp-handler-impl:arp-flow-priority": 1, 
        "arp-handler-impl:arp-flow-table-id": 0, 
        "arp-handler-impl:data-broker": {
            "name": "binding-data-broker", 
            "type": "opendaylight-md-sal-binding:binding-async-data-broker"
        }, 
        "arp-handler-impl:flood-flow-hard-timeout": 0, 
        "arp-handler-impl:flood-flow-idle-timeout": 0, 
        "arp-handler-impl:flood-flow-installation-delay": 2000, 
        "arp-handler-impl:flood-flow-priority": 2, 
        "arp-handler-impl:flood-flow-table-id": 0, 
        "arp-handler-impl:is-proactive-flood-mode": true, 
        "arp-handler-impl:notification-service": {
            "name": "binding-notification-broker", 
            "type": "opendaylight-md-sal-binding:binding-notification-service"
        }, 
        "arp-handler-impl:rpc-registry": {
            "name": "binding-rpc-broker", 
            "type": "opendaylight-md-sal-binding:binding-rpc-registry"
        }, 
        "name": "arp-handler-impl", 
        "type": "arp-handler-impl:arp-handler-impl"
    }, 
    {
        "name": "inmemory-dom-broker", 
        "opendaylight-sal-dom-broker-impl:async-data-broker": {
            "name": "inmemory-data-broker", 
            "type": "opendaylight-md-sal-dom:dom-async-data-broker"
        }, 
        "type": "opendaylight-sal-dom-broker-impl:dom-broker-impl"
    }, 
    {
        "name": "binding-notification-broker", 
        "type": "opendaylight-sal-binding-broker-impl:binding-notification-broker"
    }, 
    {
        "name": "msg-spy-service-impl", 
        "openflow-provider-impl:msgStatistics": "Tue 2015.09.01 at 03:49:47 AM UTCFROM_SWITCH_ENQUEUED: MSG[PacketInMessage] -> +0 | 13FROM_SWITCH_ENQUEUED: MSG[NotificationQueueWrapper] -> +0 | 1FROM_SWITCH_ENQUEUED: MSG[ErrorMessage] -> +0 | 5FROM_SWITCH_ENQUEUED: MSG[PortStatusMessage] -> +0 | 1FROM_SWITCH_ENQUEUED: MSG[GetFeaturesOutput] -> +0 | 1FROM_SWITCH_ENQUEUED: MSG[MultipartReplyMessage] -> +1806 | 254247FROM_SWITCH_TRANSLATE_IN_SUCCESS: MSG[PacketInMessage] -> +0 | 13FROM_SWITCH_TRANSLATE_IN_SUCCESS: MSG[NotificationQueueWrapper] -> +0 | 1FROM_SWITCH_TRANSLATE_IN_SUCCESS: MSG[ErrorMessage] -> +0 | 5FROM_SWITCH_TRANSLATE_IN_SUCCESS: MSG[PortStatusMessage] -> +0 | 1FROM_SWITCH_TRANSLATE_IN_SUCCESS: MSG[GetFeaturesOutput] -> +0 | 1FROM_SWITCH_TRANSLATE_IN_SUCCESS: MSG[MultipartReplyMessage] -> +1806 | 254247FROM_SWITCH_TRANSLATE_OUT_SUCCESS: MSG[AggregateFlowStatisticsUpdate] -> +1778 | 250304FROM_SWITCH_TRANSLATE_OUT_SUCCESS: MSG[PacketReceived] -> +0 | 13FROM_SWITCH_TRANSLATE_OUT_SUCCESS: MSG[NodeErrorNotification] -> +0 | 5FROM_SWITCH_TRANSLATE_OUT_SUCCESS: MSG[NodeConnectorUpdated] -> +0 | 4FROM_SWITCH_TRANSLATE_OUT_SUCCESS: MSG[QueueStatisticsUpdate] -> +7 | 986FROM_SWITCH_TRANSLATE_OUT_SUCCESS: MSG[NodeConnectorStatisticsUpdate] -> +7 | 984FROM_SWITCH_TRANSLATE_OUT_SUCCESS: MSG[FlowsStatisticsUpdate] -> +7 | 986FROM_SWITCH_TRANSLATE_OUT_SUCCESS: MSG[FlowTableStatisticsUpdate] -> +7 | 986FROM_SWITCH_TRANSLATE_OUT_SUCCESS: MSG[NodeUpdated] -> +0 | 2FROM_SWITCH_TRANSLATE_SRC_FAILURE: no activity detectedFROM_SWITCH_PUBLISHED_SUCCESS: MSG[AggregateFlowStatisticsUpdate] -> +1778 | 250304FROM_SWITCH_PUBLISHED_SUCCESS: MSG[PacketReceived] -> +0 | 13FROM_SWITCH_PUBLISHED_SUCCESS: MSG[NodeErrorNotification] -> +0 | 5FROM_SWITCH_PUBLISHED_SUCCESS: MSG[NodeConnectorUpdated] -> +0 | 4FROM_SWITCH_PUBLISHED_SUCCESS: MSG[QueueStatisticsUpdate] -> +7 | 986FROM_SWITCH_PUBLISHED_SUCCESS: MSG[NodeConnectorStatisticsUpdate] -> +7 | 984FROM_SWITCH_PUBLISHED_SUCCESS: MSG[FlowsStatisticsUpdate] -> +7 | 986FROM_SWITCH_PUBLISHED_SUCCESS: MSG[FlowTableStatisticsUpdate] -> +7 | 986FROM_SWITCH_PUBLISHED_SUCCESS: MSG[NodeUpdated] -> +0 | 2FROM_SWITCH_PUBLISHED_FAILURE: no activity detectedTO_SWITCH_ENQUEUED_SUCCESS: MSG[AddGroupInput] -> +0 | 20TO_SWITCH_ENQUEUED_SUCCESS: MSG[AddFlowInput] -> +0 | 174TO_SWITCH_ENQUEUED_SUCCESS: MSG[GetGroupFeaturesInput] -> +0 | 1TO_SWITCH_ENQUEUED_SUCCESS: MSG[RemoveFlowInput] -> +0 | 170TO_SWITCH_ENQUEUED_SUCCESS: MSG[GetAllFlowsStatisticsFromAllFlowTablesInput] -> +7 | 986TO_SWITCH_ENQUEUED_SUCCESS: MSG[GetFlowTablesStatisticsInput] -> +7 | 986TO_SWITCH_ENQUEUED_SUCCESS: MSG[GetAggregateFlowStatisticsFromFlowTableForAllFlowsInput] -> +1778 | 250444TO_SWITCH_ENQUEUED_SUCCESS: MSG[RemoveGroupInput] -> +0 | 20TO_SWITCH_ENQUEUED_SUCCESS: MSG[GetMeterFeaturesInput] -> +0 | 1TO_SWITCH_ENQUEUED_SUCCESS: MSG[GetAllQueuesStatisticsFromAllPortsInput] -> +7 | 986TO_SWITCH_ENQUEUED_SUCCESS: MSG[GetAllNodeConnectorsStatisticsInput] -> +7 | 986TO_SWITCH_ENQUEUED_FAILED: no activity detectedTO_SWITCH_SUBMITTED_SUCCESS: MSG[AddGroupInput] -> +0 | 20TO_SWITCH_SUBMITTED_SUCCESS: MSG[AddFlowInput] -> +0 | 174TO_SWITCH_SUBMITTED_SUCCESS: MSG[RemoveFlowInput] -> +0 | 170TO_SWITCH_SUBMITTED_SUCCESS: MSG[RemoveGroupInput] -> +0 | 20TO_SWITCH_SUBMITTED_FAILURE: no activity detected", 
        "openflow-provider-impl:openflow-plugin-provider": {
            "name": "openflow-provider", 
            "type": "openflow-provider:openflow-provider"
        }, 
        "type": "openflow-provider-impl:msg-spy-service-impl"
    }
]


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


<<< Creating Controller instance
'Controller':
{
    "adminName": "admin", 
    "adminPassword": "admin", 
    "ipAddr": "192.168.59.103", 
    "portNum": "8181", 
    "timeout": 5
}


<<< Show a particular configuration module on the Controller
    (module type: opendaylight-rest-connector:rest-connector-impl,
     module name: rest-connector-default-impl)
Module:
[
    {
        "name": "rest-connector-default-impl", 
        "opendaylight-rest-connector:config": {
            "get": {
                "received-requests": 281
            }, 
            "post": {
                "received-requests": 6
            }, 
            "put": {
                "received-requests": 190
            }
        }, 
        "opendaylight-rest-connector:dom-broker": {
            "name": "dom-broker", 
            "type": "opendaylight-md-sal-dom:dom-broker-osgi-registry"
        }, 
        "opendaylight-rest-connector:operational": {
            "get": {
                "received-requests": 200
            }
        }, 
        "opendaylight-rest-connector:rpcs": {
            "received-requests": 5
        }, 
        "opendaylight-rest-connector:websocket-port": 8185, 
        "type": "opendaylight-rest-connector:rest-connector-impl"
    }
]


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


<<< Creating Controller instance
'Controller':
{
    "adminName": "admin", 
    "adminPassword": "admin", 
    "ipAddr": "192.168.59.103", 
    "portNum": "8181", 
    "timeout": 5
}


<<< Show sessions running on the Controller 
Sessions:
{
    "session": [
        {
            "ietf-netconf-monitoring-extension:session-identifier": "client", 
            "in-bad-rpcs": 0, 
            "in-rpcs": 180, 
            "login-time": "2015-09-01T02:58:34.185Z", 
            "out-notifications": 0, 
            "out-rpc-errors": 0, 
            "session-id": 1, 
            "source-host": "127.0.0.1", 
            "transport": "ietf-netconf-monitoring:netconf-ssh", 
            "username": "admin"
        }
    ]
}


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


<<< Creating Controller instance
'Controller':
{
    "adminName": "admin", 
    "adminPassword": "admin", 
    "ipAddr": "192.168.59.103", 
    "portNum": "8181", 
    "timeout": 5
}


<<< Show notification event streams registered on the Controller
Streams:
{}


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo 1 Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


<<< Creating Controller instance
'Controller':
{
    "adminName": "admin", 
    "adminPassword": "admin", 
    "ipAddr": "192.168.59.103", 
    "portNum": "8181"
}


<<< Get list of OpenFlow nodes connected to the Controller
OpenFlow node names (composed as "openflow:datapathid"):
[
    "openflow:1"
]


<<< Get generic information about OpenFlow nodes
'openflow:1' info:
{
    "hardware": "Open vSwitch", 
    "software": "2.0.2", 
    "serial-number": "None", 
    "description": "None", 
    "manufacturer": "Nicira, Inc."
}


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo 10 Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< 'Controller': 192.168.59.103, 'OpenFlow' switch: 'openflow:1'


<<< Set OpenFlow flow on the Controller
        Match:  Ethernet Type (0x800)
                Ethernet Source Address (00:00:00:11:23:ae)
                Ethernet Destination Address (20:14:29:01:19:61)
                IPv4 Source Address (192.1.2.3/10)
                IPv4 Destination Address (172.168.5.6/18)
                IP Protocol Number (17)
                IP DSCP (8)
                IP ECN (3)
                UDP Source Port Number (25364)
                UDP Destination Port Number (8080)
                Input Port (13)
        Action: Output (NORMAL)


<<< Flow to send:
{
    "flow-node-inventory:flow": {
        "hard-timeout": 0, 
        "id": 17, 
        "idle-timeout": 0, 
        "instructions": {
            "instruction": [
                {
                    "apply-actions": {
                        "action": [
                            {
                                "order": 0, 
                                "output-action": {
                                    "output-node-connector": "NORMAL"
                                }
                            }
                        ]
                    }, 
                    "order": 0
                }
            ]
        }, 
        "match": {
            "ethernet-match": {
                "ethernet-destination": {
                    "address": "20:14:29:01:19:61"
                }, 
                "ethernet-source": {
                    "address": "00:00:00:11:23:ae"
                }, 
                "ethernet-type": {
                    "type": 2048
                }
            }, 
            "in-port": 13, 
            "ip-match": {
                "ip-dscp": 8, 
                "ip-ecn": 3, 
                "ip-protocol": 17
            }, 
            "ipv4-destination": "172.168.5.6/18", 
            "ipv4-source": "192.1.2.3/10", 
            "udp-destination-port": 8080, 
            "udp-source-port": 25364
        }, 
        "priority": 1008, 
        "table_id": 0
    }
}
<<< Flow successfully added to the Controller


<<< Get configured flow from the Controller
<<< Flow successfully read from the Controller
Flow info:
{
    "idle-timeout": 0, 
    "hard-timeout": 0, 
    "priority": 1008, 
    "table_id": 0, 
    "id": "17", 
    "match": {
        "ipv4-source": "192.1.2.3/10", 
        "ethernet-match": {
            "ethernet-source": {
                "address": "00:00:00:11:23:ae"
            }, 
            "ethernet-type": {
                "type": 2048
            }, 
            "ethernet-destination": {
                "address": "20:14:29:01:19:61"
            }
        }, 
        "udp-source-port": 25364, 
        "ip-match": {
            "ip-ecn": 3, 
            "ip-dscp": 8, 
            "ip-protocol": 17
        }, 
        "udp-destination-port": 8080, 
        "in-port": "13", 
        "ipv4-destination": "172.168.5.6/18"
    }, 
    "instructions": {
        "instruction": [
            {
                "order": 0, 
                "apply-actions": {
                    "action": [
                        {
                            "output-action": {
                                "output-node-connector": "NORMAL"
                            }, 
                            "order": 0
                        }
                    ]
                }
            }
        ]
    }
}


<<< Delete flow with id of '17' from the Controller's cache and from the table '0' on the 'openflow:1' node
<<< Flow successfully removed from the Controller


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo 11 Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< 'Controller': 192.168.59.103, 'OpenFlow' switch: 'openflow:1'


<<< Set OpenFlow flow on the Controller
        Match:  Ethernet Type (0x800)
                Ethernet Source Address (00:00:00:11:23:ae)
                Ethernet Destination Address (00:ff:20:01:1a:3d)
                IPv4 Source Address (17.1.2.3/8)
                IPv4 Destination Address (172.168.5.6/18)
                IP Protocol Number (1)
                IP DSCP (16)
                IP ECN (3)
                ICMPv4 Type (6)
                ICMPv4 Code (3)
                Input Port (10)
        Action: Output (NORMAL)


<<< Flow to send:
{
    "flow-node-inventory:flow": {
        "hard-timeout": 0, 
        "id": 18, 
        "idle-timeout": 0, 
        "instructions": {
            "instruction": [
                {
                    "apply-actions": {
                        "action": [
                            {
                                "order": 0, 
                                "output-action": {
                                    "output-node-connector": "NORMAL"
                                }
                            }
                        ]
                    }, 
                    "order": 0
                }
            ]
        }, 
        "match": {
            "ethernet-match": {
                "ethernet-destination": {
                    "address": "00:ff:20:01:1a:3d"
                }, 
                "ethernet-source": {
                    "address": "00:00:00:11:23:ae"
                }, 
                "ethernet-type": {
                    "type": 2048
                }
            }, 
            "icmpv4-match": {
                "icmpv4-code": 3, 
                "icmpv4-type": 6
            }, 
            "in-port": 10, 
            "ip-match": {
                "ip-dscp": 16, 
                "ip-ecn": 3, 
                "ip-protocol": 1
            }, 
            "ipv4-destination": "172.168.5.6/18", 
            "ipv4-source": "17.1.2.3/8"
        }, 
        "priority": 1009, 
        "table_id": 0
    }
}
<<< Flow successfully added to the Controller


<<< Get configured flow from the Controller
<<< Flow successfully read from the Controller
Flow info:
{
    "idle-timeout": 0, 
    "hard-timeout": 0, 
    "priority": 1009, 
    "table_id": 0, 
    "id": "18", 
    "match": {
        "ipv4-source": "17.1.2.3/8", 
        "ip-match": {
            "ip-ecn": 3, 
            "ip-dscp": 16, 
            "ip-protocol": 1
        }, 
        "icmpv4-match": {
            "icmpv4-type": 6, 
            "icmpv4-code": 3
        }, 
        "ethernet-match": {
            "ethernet-source": {
                "address": "00:00:00:11:23:ae"
            }, 
            "ethernet-type": {
                "type": 2048
            }, 
            "ethernet-destination": {
                "address": "00:ff:20:01:1a:3d"
            }
        }, 
        "ipv4-destination": "172.168.5.6/18", 
        "in-port": "10"
    }, 
    "instructions": {
        "instruction": [
            {
                "order": 0, 
                "apply-actions": {
                    "action": [
                        {
                            "output-action": {
                                "output-node-connector": "NORMAL"
                            }, 
                            "order": 0
                        }
                    ]
                }
            }
        ]
    }
}


<<< Delete flow with id of '18' from the Controller's cache and from the table '0' on the 'openflow:1' node
<<< Flow successfully removed from the Controller


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo 12 Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< 'Controller': 192.168.59.103, 'OpenFlow' switch: 'openflow:1'


<<< Set OpenFlow flow on the Controller
        Match:  Ethernet Type (0x806)
                Ethernet Source Address (00:ab:fe:01:03:31)
                Ethernet Destination Address (ff:ff:ff:ff:ff:ff)
                ARP Operation (1)
                ARP Source IPv4 Address (192.168.4.1/32)
                ARP Target IPv4 Address (10.21.22.23/32)
                ARP Source Hardware Address (12:34:56:78:98:ab)
                ARP Target Hardware Address (fe:dc:ba:98:76:54)
        Action: Output (CONTROLLER)


<<< Flow to send:
{
    "flow-node-inventory:flow": {
        "hard-timeout": 0, 
        "id": 19, 
        "idle-timeout": 0, 
        "instructions": {
            "instruction": [
                {
                    "apply-actions": {
                        "action": [
                            {
                                "order": 0, 
                                "output-action": {
                                    "output-node-connector": "CONTROLLER"
                                }
                            }
                        ]
                    }, 
                    "order": 0
                }
            ]
        }, 
        "match": {
            "arp-op": 1, 
            "arp-source-hardware-address": {
                "address": "12:34:56:78:98:ab"
            }, 
            "arp-source-transport-address": "192.168.4.1/32", 
            "arp-target-hardware-address": {
                "address": "fe:dc:ba:98:76:54"
            }, 
            "arp-target-transport-address": "10.21.22.23/32", 
            "ethernet-match": {
                "ethernet-destination": {
                    "address": "ff:ff:ff:ff:ff:ff"
                }, 
                "ethernet-source": {
                    "address": "00:ab:fe:01:03:31"
                }, 
                "ethernet-type": {
                    "type": 2054
                }
            }
        }, 
        "priority": 1010, 
        "table_id": 0
    }
}
<<< Flow successfully added to the Controller


<<< Get configured flow from the Controller
<<< Flow successfully read from the Controller
Flow info:
{
    "idle-timeout": 0, 
    "hard-timeout": 0, 
    "priority": 1010, 
    "table_id": 0, 
    "id": "19", 
    "match": {
        "ethernet-match": {
            "ethernet-source": {
                "address": "00:ab:fe:01:03:31"
            }, 
            "ethernet-type": {
                "type": 2054
            }, 
            "ethernet-destination": {
                "address": "ff:ff:ff:ff:ff:ff"
            }
        }, 
        "arp-target-hardware-address": {
            "address": "fe:dc:ba:98:76:54"
        }, 
        "arp-source-hardware-address": {
            "address": "12:34:56:78:98:ab"
        }, 
        "arp-source-transport-address": "192.168.4.1/32", 
        "arp-target-transport-address": "10.21.22.23/32", 
        "arp-op": 1
    }, 
    "instructions": {
        "instruction": [
            {
                "order": 0, 
                "apply-actions": {
                    "action": [
                        {
                            "output-action": {
                                "output-node-connector": "CONTROLLER"
                            }, 
                            "order": 0
                        }
                    ]
                }
            }
        ]
    }
}


<<< Delete flow with id of '19' from the Controller's cache and from the table '0' on the 'openflow:1' node
<<< Flow successfully removed from the Controller


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo 13 Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< 'Controller': 192.168.59.103, 'OpenFlow' switch: 'openflow:1'


<<< Set OpenFlow flow on the Controller
        Match:  Ethernet Type (0x800)
                Ethernet Source Address (00:00:00:11:23:ad)
                Ethernet Destination Address (00:ff:29:01:19:61)
                VLAN ID (100)
                VLAN PCP(3)
        Action: Output (to Physical Port Number)


<<< Flow to send:
{
    "flow-node-inventory:flow": {
        "hard-timeout": 0, 
        "id": 20, 
        "idle-timeout": 0, 
        "instructions": {
            "instruction": [
                {
                    "apply-actions": {
                        "action": [
                            {
                                "order": 0, 
                                "output-action": {
                                    "output-node-connector": 7
                                }
                            }
                        ]
                    }, 
                    "order": 0
                }
            ]
        }, 
        "match": {
            "ethernet-match": {
                "ethernet-destination": {
                    "address": "00:ff:29:01:19:61"
                }, 
                "ethernet-source": {
                    "address": "00:00:00:11:23:ad"
                }, 
                "ethernet-type": {
                    "type": 2048
                }
            }, 
            "vlan-match": {
                "vlan-id": {
                    "vlan-id": 100, 
                    "vlan-id-present": true
                }, 
                "vlan-pcp": 3
            }
        }, 
        "priority": 1011, 
        "table_id": 0
    }
}
<<< Flow successfully added to the Controller


<<< Get configured flow from the Controller
<<< Flow successfully read from the Controller
Flow info:
{
    "idle-timeout": 0, 
    "hard-timeout": 0, 
    "priority": 1011, 
    "table_id": 0, 
    "id": "20", 
    "match": {
        "vlan-match": {
            "vlan-id": {
                "vlan-id": 100, 
                "vlan-id-present": true
            }, 
            "vlan-pcp": 3
        }, 
        "ethernet-match": {
            "ethernet-source": {
                "address": "00:00:00:11:23:ad"
            }, 
            "ethernet-type": {
                "type": 2048
            }, 
            "ethernet-destination": {
                "address": "00:ff:29:01:19:61"
            }
        }
    }, 
    "instructions": {
        "instruction": [
            {
                "order": 0, 
                "apply-actions": {
                    "action": [
                        {
                            "output-action": {
                                "output-node-connector": "7"
                            }, 
                            "order": 0
                        }
                    ]
                }
            }
        ]
    }
}


<<< Delete flow with id of '20' from the Controller's cache and from the table '0' on the 'openflow:1' node
<<< Flow successfully removed from the Controller


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo 14 Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< 'Controller': 192.168.59.103, 'OpenFlow' switch: 'openflow:1'


<<< Set OpenFlow flow on the Controller
        Match:  Ethernet Type (0x800)
                Ethernet Source Address (00:00:00:AA:BB:CC)
                Ethernet Destination Address (FF:FF:AA:BC:ED:FE)
                Input Port (5)
        Action: Push VLAN (Ethernet Type=0x8100)
                Set Field (VLAN ID=100)
                Output (to Physical Port Number 5)


<<< Flow to send:
{
    "flow-node-inventory:flow": {
        "cookie": 401, 
        "cookie_mask": 255, 
        "flow-name": "Push VLAN 100", 
        "hard-timeout": 1200, 
        "id": 21, 
        "idle-timeout": 3400, 
        "instructions": {
            "instruction": [
                {
                    "apply-actions": {
                        "action": [
                            {
                                "order": 0, 
                                "push-vlan-action": {
                                    "ethernet-type": 33024
                                }
                            }, 
                            {
                                "order": 1, 
                                "set-field": {
                                    "vlan-match": {
                                        "vlan-id": {
                                            "vlan-id": 100, 
                                            "vlan-id-present": true
                                        }
                                    }
                                }
                            }, 
                            {
                                "order": 2, 
                                "output-action": {
                                    "output-node-connector": 5
                                }
                            }
                        ]
                    }, 
                    "order": 0
                }
            ]
        }, 
        "match": {
            "ethernet-match": {
                "ethernet-destination": {
                    "address": "FF:FF:AA:BC:ED:FE"
                }, 
                "ethernet-source": {
                    "address": "00:00:00:AA:BB:CC"
                }, 
                "ethernet-type": {
                    "type": 2048
                }
            }, 
            "in-port": 5
        }, 
        "priority": 1012, 
        "table_id": 0
    }
}
<<< Flow successfully added to the Controller


<<< Get configured flow from the Controller
<<< Flow successfully read from the Controller
Flow info:
{
    "flow-name": "Push VLAN 100", 
    "idle-timeout": 3400, 
    "cookie_mask": 255, 
    "id": "21", 
    "priority": 1012, 
    "table_id": 0, 
    "cookie": 401, 
    "hard-timeout": 1200, 
    "match": {
        "in-port": "5", 
        "ethernet-match": {
            "ethernet-source": {
                "address": "00:00:00:AA:BB:CC"
            }, 
            "ethernet-type": {
                "type": 2048
            }, 
            "ethernet-destination": {
                "address": "FF:FF:AA:BC:ED:FE"
            }
        }
    }, 
    "instructions": {
        "instruction": [
            {
                "order": 0, 
                "apply-actions": {
                    "action": [
                        {
                            "output-action": {
                                "output-node-connector": "5"
                            }, 
                            "order": 2
                        }, 
                        {
                            "set-field": {
                                "vlan-match": {
                                    "vlan-id": {
                                        "vlan-id": 100, 
                                        "vlan-id-present": true
                                    }
                                }
                            }, 
                            "order": 1
                        }, 
                        {
                            "order": 0, 
                            "push-vlan-action": {
                                "ethernet-type": 33024
                            }
                        }
                    ]
                }
            }
        ]
    }
}


<<< Delete flow with id of '21' from the Controller's cache and from the table '0' on the 'openflow:1' node
<<< Flow successfully removed from the Controller


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo 15 Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< 'Controller': 192.168.59.103, 'OpenFlow' switch: 'openflow:1'


<<< Set OpenFlow flow on the Controller
        Match:  Ethernet Type (0x800)
                VLAN ID (100)
                Input Port (3)
        Action: Push VLAN (Ethernet Type=0x88a8)
                Set Field (VLAN ID=200)
                Output (to Physical Port Number 5)


<<< Flow to send:
{
    "flow-node-inventory:flow": {
        "cookie": 407, 
        "cookie_mask": 255, 
        "flow-name": "Push VLAN", 
        "hard-timeout": 3400, 
        "id": 22, 
        "idle-timeout": 3400, 
        "instructions": {
            "instruction": [
                {
                    "apply-actions": {
                        "action": [
                            {
                                "order": 0, 
                                "push-vlan-action": {
                                    "ethernet-type": 34984
                                }
                            }, 
                            {
                                "order": 1, 
                                "set-field": {
                                    "vlan-match": {
                                        "vlan-id": {
                                            "vlan-id": 200, 
                                            "vlan-id-present": true
                                        }
                                    }
                                }
                            }, 
                            {
                                "order": 2, 
                                "output-action": {
                                    "output-node-connector": 5
                                }
                            }
                        ]
                    }, 
                    "order": 0
                }
            ]
        }, 
        "match": {
            "ethernet-match": {
                "ethernet-type": {
                    "type": 2048
                }
            }, 
            "in-port": 3, 
            "vlan-match": {
                "vlan-id": {
                    "vlan-id": 100, 
                    "vlan-id-present": true
                }
            }
        }, 
        "priority": 1013, 
        "table_id": 0
    }
}
<<< Flow successfully added to the Controller


<<< Get configured flow from the Controller
<<< Flow successfully read from the Controller
Flow info:
{
    "flow-name": "Push VLAN", 
    "idle-timeout": 3400, 
    "cookie_mask": 255, 
    "id": "22", 
    "priority": 1013, 
    "table_id": 0, 
    "cookie": 407, 
    "hard-timeout": 3400, 
    "match": {
        "vlan-match": {
            "vlan-id": {
                "vlan-id": 100, 
                "vlan-id-present": true
            }
        }, 
        "in-port": "3", 
        "ethernet-match": {
            "ethernet-type": {
                "type": 2048
            }
        }
    }, 
    "instructions": {
        "instruction": [
            {
                "order": 0, 
                "apply-actions": {
                    "action": [
                        {
                            "output-action": {
                                "output-node-connector": "5"
                            }, 
                            "order": 2
                        }, 
                        {
                            "set-field": {
                                "vlan-match": {
                                    "vlan-id": {
                                        "vlan-id": 200, 
                                        "vlan-id-present": true
                                    }
                                }
                            }, 
                            "order": 1
                        }, 
                        {
                            "order": 0, 
                            "push-vlan-action": {
                                "ethernet-type": 34984
                            }
                        }
                    ]
                }
            }
        ]
    }
}


<<< Delete flow with id of '22' from the Controller's cache and from the table '0' on the 'openflow:1' node
<<< Flow successfully removed from the Controller


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo 16 Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< 'Controller': 192.168.59.103, 'OpenFlow' switch: 'openflow:1'


<<< Set OpenFlow flow on the Controller
        Match:  Ethernet Type (0x86dd)
                IPv6 Source Address (fe80::2acf:e9ff:fe21:6431/128)
                IPv6 Destination Address (aabb:1234:2acf:e9ff::fe21:6431/64)
        Action: Output (to CONTROLLER)


<<< Flow to send:
{
    "flow-node-inventory:flow": {
        "cookie": 408, 
        "cookie_mask": 255, 
        "flow-name": "match=ipv6-src,ipv6-dst;actions=output:Controller", 
        "hard-timeout": 3400, 
        "id": 23, 
        "idle-timeout": 3400, 
        "instructions": {
            "instruction": [
                {
                    "apply-actions": {
                        "action": [
                            {
                                "order": 0, 
                                "output-action": {
                                    "output-node-connector": "CONTROLLER"
                                }
                            }
                        ]
                    }, 
                    "order": 0
                }
            ]
        }, 
        "match": {
            "ethernet-match": {
                "ethernet-type": {
                    "type": 34525
                }
            }, 
            "ipv6-destination": "aabb:1234:2acf:e9ff::fe21:6431/64", 
            "ipv6-source": "fe80::2acf:e9ff:fe21:6431/128"
        }, 
        "priority": 1014, 
        "table_id": 0
    }
}
<<< Flow successfully added to the Controller


<<< Get configured flow from the Controller
<<< Flow successfully read from the Controller
Flow info:
{
    "flow-name": "match=ipv6-src,ipv6-dst;actions=output:Controller", 
    "idle-timeout": 3400, 
    "cookie_mask": 255, 
    "id": "23", 
    "priority": 1014, 
    "table_id": 0, 
    "cookie": 408, 
    "hard-timeout": 3400, 
    "match": {
        "ipv6-source": "fe80::2acf:e9ff:fe21:6431/128", 
        "ipv6-destination": "aabb:1234:2acf:e9ff::fe21:6431/64", 
        "ethernet-match": {
            "ethernet-type": {
                "type": 34525
            }
        }
    }, 
    "instructions": {
        "instruction": [
            {
                "order": 0, 
                "apply-actions": {
                    "action": [
                        {
                            "output-action": {
                                "output-node-connector": "CONTROLLER"
                            }, 
                            "order": 0
                        }
                    ]
                }
            }
        ]
    }
}


<<< Delete flow with id of '23' from the Controller's cache and from the table '0' on the 'openflow:1' node
<<< Flow successfully removed from the Controller


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo 17 Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< 'Controller': 192.168.59.103, 'OpenFlow' switch: 'openflow:1'


<<< Set OpenFlow flow on the Controller
        Match:  Ethernet Type (0x86dd)
                IPv6 Source Address (fe80::2acf:e9ff:fe21:6431/128)
                IPv6 Destination Address (aabb:1234:2acf:e9ff::fe21:6431/64)
                IP DSCP (8)
                UDP Source Port (25364)
                UDP Destination Port (7777)
        Action: Output (to CONTROLLER)


<<< Flow to send:
{
    "flow-node-inventory:flow": {
        "flow-name": "demo17.py", 
        "hard-timeout": 0, 
        "id": 23, 
        "idle-timeout": 0, 
        "instructions": {
            "instruction": [
                {
                    "apply-actions": {
                        "action": [
                            {
                                "order": 0, 
                                "output-action": {
                                    "output-node-connector": "CONTROLLER"
                                }
                            }
                        ]
                    }, 
                    "order": 0
                }
            ]
        }, 
        "match": {
            "ethernet-match": {
                "ethernet-type": {
                    "type": 34525
                }
            }, 
            "ip-match": {
                "ip-dscp": 8, 
                "ip-protocol": 17
            }, 
            "ipv6-destination": "aabb:1234:2acf:e9ff::fe21:6431/64", 
            "ipv6-source": "fe80::2acf:e9ff:fe21:6431/128", 
            "udp-destination-port": 7777, 
            "udp-source-port": 25364
        }, 
        "priority": 1015, 
        "table_id": 0
    }
}
<<< Flow successfully added to the Controller


<<< Get configured flow from the Controller
<<< Flow successfully read from the Controller
Flow info:
{
    "flow-name": "demo17.py", 
    "idle-timeout": 0, 
    "id": "23", 
    "priority": 1015, 
    "table_id": 0, 
    "hard-timeout": 0, 
    "match": {
        "ip-match": {
            "ip-dscp": 8, 
            "ip-protocol": 17
        }, 
        "ipv6-source": "fe80::2acf:e9ff:fe21:6431/128", 
        "ethernet-match": {
            "ethernet-type": {
                "type": 34525
            }
        }, 
        "ipv6-destination": "aabb:1234:2acf:e9ff::fe21:6431/64", 
        "udp-destination-port": 7777, 
        "udp-source-port": 25364
    }, 
    "instructions": {
        "instruction": [
            {
                "order": 0, 
                "apply-actions": {
                    "action": [
                        {
                            "output-action": {
                                "output-node-connector": "CONTROLLER"
                            }, 
                            "order": 0
                        }
                    ]
                }
            }
        ]
    }
}


<<< Delete flow with id of '23' from the Controller's cache and from the table '0' on the 'openflow:1' node
<<< Flow successfully removed from the Controller


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo 18 Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< 'Controller': 192.168.59.103, 'OpenFlow' switch: 'openflow:1'


<<< Set OpenFlow flow on the Controller
        Match:  Ethernet Type (0x86dd)
                IPv6 Source Address (2001::2acf:e9ff:fe21:6431/80)
                IPv6 Destination Address (2004:1234:2acf:e9ff::fe21:6431/64)
                IP DSCP (8)
                TCP Source Port (12345)
                TCP Destination Port (54321)
        Action: Output (to CONTROLLER)


<<< Flow to send:
{
    "flow-node-inventory:flow": {
        "flow-name": "demo18.py", 
        "hard-timeout": 0, 
        "id": 24, 
        "idle-timeout": 0, 
        "instructions": {
            "instruction": [
                {
                    "apply-actions": {
                        "action": [
                            {
                                "order": 0, 
                                "output-action": {
                                    "output-node-connector": "CONTROLLER"
                                }
                            }
                        ]
                    }, 
                    "order": 0
                }
            ]
        }, 
        "match": {
            "ethernet-match": {
                "ethernet-type": {
                    "type": 34525
                }
            }, 
            "ip-match": {
                "ip-dscp": 8, 
                "ip-protocol": 6
            }, 
            "ipv6-destination": "2004:1234:2acf:e9ff::fe21:6431/64", 
            "ipv6-source": "2001::2acf:e9ff:fe21:6431/80", 
            "tcp-destination-port": 54321, 
            "tcp-source-port": 12345
        }, 
        "priority": 1017, 
        "table_id": 0
    }
}
<<< Flow successfully added to the Controller


<<< Get configured flow from the Controller
<<< Flow successfully read from the Controller
Flow info:
{
    "flow-name": "demo18.py", 
    "idle-timeout": 0, 
    "id": "24", 
    "priority": 1017, 
    "table_id": 0, 
    "hard-timeout": 0, 
    "match": {
        "ip-match": {
            "ip-dscp": 8, 
            "ip-protocol": 6
        }, 
        "ipv6-source": "2001::2acf:e9ff:fe21:6431/80", 
        "ethernet-match": {
            "ethernet-type": {
                "type": 34525
            }
        }, 
        "tcp-destination-port": 54321, 
        "ipv6-destination": "2004:1234:2acf:e9ff::fe21:6431/64", 
        "tcp-source-port": 12345
    }, 
    "instructions": {
        "instruction": [
            {
                "order": 0, 
                "apply-actions": {
                    "action": [
                        {
                            "output-action": {
                                "output-node-connector": "CONTROLLER"
                            }, 
                            "order": 0
                        }
                    ]
                }
            }
        ]
    }
}


<<< Delete flow with id of '24' from the Controller's cache and from the table '0' on the 'openflow:1' node
<<< Flow successfully removed from the Controller


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo 19 Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< 'Controller': 192.168.59.103, 'OpenFlow' switch: 'openflow:1'


<<< Set OpenFlow flow on the Controller
        Match:  Ethernet Type (0x86dd)
                IPv6 Source Address (4231::3210:3210:3210:3210/80)
                IPv6 Destination Address (1234:1234:1234:1234::5678:5678/64)
                IPv6 Flow Label (33)
                IP DSCP (40)
                TCP Source Port (11111)
                TCP Destination Port (22222)
        Action: Output (to CONTROLLER)


<<< Flow to send:
{
    "flow-node-inventory:flow": {
        "cookie": 23, 
        "flow-name": "demo19.py", 
        "hard-timeout": 1200, 
        "id": 25, 
        "idle-timeout": 3400, 
        "instructions": {
            "instruction": [
                {
                    "apply-actions": {
                        "action": [
                            {
                                "order": 0, 
                                "output-action": {
                                    "output-node-connector": "CONTROLLER"
                                }
                            }
                        ]
                    }, 
                    "order": 0
                }
            ]
        }, 
        "match": {
            "ethernet-match": {
                "ethernet-type": {
                    "type": 34525
                }
            }, 
            "ip-match": {
                "ip-dscp": 40, 
                "ip-protocol": 6
            }, 
            "ipv6-destination": "1234:1234:1234:1234::5678:5678/64", 
            "ipv6-label": {
                "ipv6-flabel": 33
            }, 
            "ipv6-source": "4231::3210:3210:3210:3210/80", 
            "tcp-destination-port": 22222, 
            "tcp-source-port": 11111
        }, 
        "priority": 1018, 
        "table_id": 0
    }
}
<<< Flow successfully added to the Controller


<<< Get configured flow from the Controller
<<< Flow successfully read from the Controller
Flow info:
{
    "flow-name": "demo19.py", 
    "idle-timeout": 3400, 
    "id": "25", 
    "priority": 1018, 
    "table_id": 0, 
    "cookie": 23, 
    "hard-timeout": 1200, 
    "match": {
        "ipv6-label": {
            "ipv6-flabel": 33
        }, 
        "ethernet-match": {
            "ethernet-type": {
                "type": 34525
            }
        }, 
        "ipv6-source": "4231::3210:3210:3210:3210/80", 
        "ip-match": {
            "ip-dscp": 40, 
            "ip-protocol": 6
        }, 
        "tcp-destination-port": 22222, 
        "ipv6-destination": "1234:1234:1234:1234::5678:5678/64", 
        "tcp-source-port": 11111
    }, 
    "instructions": {
        "instruction": [
            {
                "order": 0, 
                "apply-actions": {
                    "action": [
                        {
                            "output-action": {
                                "output-node-connector": "CONTROLLER"
                            }, 
                            "order": 0
                        }
                    ]
                }
            }
        ]
    }
}


<<< Delete flow with id of '25' from the Controller's cache and from the table '0' on the 'openflow:1' node
<<< Flow successfully removed from the Controller


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo 2 Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


<<< Creating Controller instance
'Controller':
{
    "adminName": "admin", 
    "adminPassword": "admin", 
    "ipAddr": "192.168.59.103", 
    "portNum": "8181"
}


<<< Get information about OpenFlow node 'openflow:1'
Node 'openflow:1' generic info:
{
    "hardware": "Open vSwitch", 
    "software": "2.0.2", 
    "serial-number": "None", 
    "description": "None", 
    "manufacturer": "Nicira, Inc."
}


Node 'openflow:1' features:
{
    "max_buffers": 256, 
    "max_tables": 254, 
    "capabilities": [
        "table-stats", 
        "arp-match-ip", 
        "port-stats", 
        "queue-stats", 
        "flow-stats"
    ]
}


Node 'openflow:1' ports list:
[
    "1", 
    "2", 
    "LOCAL"
]


Node 'openflow:1' ports brief information:
[
    {
        "MAC address": "2A:ED:D7:E2:B5:2B", 
        "current feature": "COPPER TEN-GB-FD", 
        "id": "openflow:1:2", 
        "name": "s1-eth2", 
        "number": "2"
    }, 
    {
        "MAC address": "2E:3C:93:C1:F3:A4", 
        "current feature": "COPPER TEN-GB-FD", 
        "id": "openflow:1:1", 
        "name": "s1-eth1", 
        "number": "1"
    }, 
    {
        "MAC address": "6A:5D:69:D0:C5:44", 
        "current feature": "", 
        "id": "openflow:1:LOCAL", 
        "name": "s1", 
        "number": "LOCAL"
    }
]


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo 20 Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< 'Controller': 192.168.59.103, 'OpenFlow' switch: 'openflow:1'


<<< Set OpenFlow flow on the Controller
        Match:  Ethernet Type (0x86dd)
                IP DSCP (56)
                IP ECN (3)
                IPv6 Source Address (1234:5678:9ABC:DEF0:FDCD:A987:6543:210F/76)
                IPv6 Destination Address (2000:2abc:edff:fe00::3456/94)
                IPv6 Flow Label (15)
                ICMPv6 Type (1)
                ICMPv6 Code (3)
                Metadata (0x0123456789ABCDEF)
        Action: Output (to CONTROLLER)


<<< Flow to send:
{
    "flow-node-inventory:flow": {
        "cookie": 250, 
        "cookie_mask": 255, 
        "flow-name": "demo20.py", 
        "hard-timeout": 1200, 
        "id": 26, 
        "idle-timeout": 3400, 
        "instructions": {
            "instruction": [
                {
                    "apply-actions": {
                        "action": [
                            {
                                "order": 0, 
                                "output-action": {
                                    "output-node-connector": "CONTROLLER"
                                }
                            }
                        ]
                    }, 
                    "order": 0
                }
            ]
        }, 
        "match": {
            "ethernet-match": {
                "ethernet-type": {
                    "type": 34525
                }
            }, 
            "icmpv6-match": {
                "icmpv6-code": 3, 
                "icmpv6-type": 1
            }, 
            "ip-match": {
                "ip-dscp": 56, 
                "ip-ecn": 3, 
                "ip-protocol": 58
            }, 
            "ipv6-destination": "2000:2abc:edff:fe00::3456/94", 
            "ipv6-label": {
                "ipv6-flabel": 15
            }, 
            "ipv6-source": "1234:5678:9ABC:DEF0:FDCD:A987:6543:210F/76", 
            "metadata": {
                "metadata": "0x0123456789ABCDEF"
            }
        }, 
        "priority": 1019, 
        "table_id": 0
    }
}
<<< Flow successfully added to the Controller


<<< Get configured flow from the Controller
<<< Flow successfully read from the Controller
Flow info:
{
    "flow-name": "demo20.py", 
    "idle-timeout": 3400, 
    "cookie_mask": 255, 
    "id": "26", 
    "priority": 1019, 
    "table_id": 0, 
    "cookie": 250, 
    "hard-timeout": 1200, 
    "match": {
        "ipv6-label": {
            "ipv6-flabel": 15
        }, 
        "ip-match": {
            "ip-ecn": 3, 
            "ip-dscp": 56, 
            "ip-protocol": 58
        }, 
        "ipv6-source": "1234:5678:9ABC:DEF0:FDCD:A987:6543:210F/76", 
        "ethernet-match": {
            "ethernet-type": {
                "type": 34525
            }
        }, 
        "ipv6-destination": "2000:2abc:edff:fe00::3456/94", 
        "icmpv6-match": {
            "icmpv6-type": 1, 
            "icmpv6-code": 3
        }, 
        "metadata": {
            "metadata": 81985529216486895
        }
    }, 
    "instructions": {
        "instruction": [
            {
                "order": 0, 
                "apply-actions": {
                    "action": [
                        {
                            "output-action": {
                                "output-node-connector": "CONTROLLER"
                            }, 
                            "order": 0
                        }
                    ]
                }
            }
        ]
    }
}


<<< Delete flow with id of '26' from the Controller's cache and from the table '0' on the 'openflow:1' node
<<< Flow successfully removed from the Controller


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo 21 Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< 'Controller': 192.168.59.103, 'OpenFlow' switch: 'openflow:1'


<<< Set OpenFlow flow on the Controller
        Match:  Ethernet Type (0x86dd)
                IP DSCP (48)
                IP ECN (3)
                IPv6 Source Address (1234:5678:9ABC:DEF0:FDCD:A987:6543:210F/76)
                IPv6 Destination Address (2000:2abc:edff:fe00::3456/94)
                IPv6 Flow Label (7)
                IPv6 Extension Header (0)
                TCP Source Port (1831)
                TCP Destination Port (1006)
                Metadata (123456789)
        Action: Output (to CONTROLLER)


<<< Flow to send:
{
    "flow-node-inventory:flow": {
        "cookie": 2100, 
        "hard-timeout": 1234, 
        "id": 27, 
        "idle-timeout": 3456, 
        "installHw": false, 
        "instructions": {
            "instruction": [
                {
                    "apply-actions": {
                        "action": [
                            {
                                "order": 0, 
                                "output-action": {
                                    "output-node-connector": "CONTROLLER"
                                }
                            }
                        ]
                    }, 
                    "order": 0
                }
            ]
        }, 
        "match": {
            "ethernet-match": {
                "ethernet-type": {
                    "type": 34525
                }
            }, 
            "ip-match": {
                "ip-dscp": 48, 
                "ip-ecn": 3, 
                "ip-protocol": 6
            }, 
            "ipv6-destination": "2000:2abc:edff:fe00::3456/94", 
            "ipv6-ext-header": {
                "ipv6-exthdr": 0
            }, 
            "ipv6-label": {
                "ipv6-flabel": 7
            }, 
            "ipv6-source": "1234:5678:9ABC:DEF0:FDCD:A987:6543:210F/76", 
            "metadata": {
                "metadata": "123456789"
            }, 
            "tcp-destination-port": 1006, 
            "tcp-source-port": 1831
        }, 
        "priority": 1020, 
        "strict": false, 
        "table_id": 0
    }
}
<<< Flow successfully added to the Controller


<<< Get configured flow from the Controller
<<< Flow successfully read from the Controller
Flow info:
{
    "idle-timeout": 3456, 
    "id": "27", 
    "priority": 1020, 
    "strict": false, 
    "table_id": 0, 
    "cookie": 2100, 
    "installHw": false, 
    "hard-timeout": 1234, 
    "match": {
        "ipv6-label": {
            "ipv6-flabel": 7
        }, 
        "ethernet-match": {
            "ethernet-type": {
                "type": 34525
            }
        }, 
        "ipv6-source": "1234:5678:9ABC:DEF0:FDCD:A987:6543:210F/76", 
        "ip-match": {
            "ip-ecn": 3, 
            "ip-dscp": 48, 
            "ip-protocol": 6
        }, 
        "tcp-destination-port": 1006, 
        "ipv6-destination": "2000:2abc:edff:fe00::3456/94", 
        "tcp-source-port": 1831, 
        "ipv6-ext-header": {
            "ipv6-exthdr": 0
        }, 
        "metadata": {
            "metadata": 123456789
        }
    }, 
    "instructions": {
        "instruction": [
            {
                "order": 0, 
                "apply-actions": {
                    "action": [
                        {
                            "output-action": {
                                "output-node-connector": "CONTROLLER"
                            }, 
                            "order": 0
                        }
                    ]
                }
            }
        ]
    }
}


<<< Delete flow with id of '27' from the Controller's cache and from the table '0' on the 'openflow:1' node
<<< Flow successfully removed from the Controller


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo 22 Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< 'Controller': 192.168.59.103, 'OpenFlow' switch: 'openflow:1'


<<< Set OpenFlow flow on the Controller
        Match:  Ethernet Type (0x800)
                Input Port (13)
                IPv4 Destination Address (10.12.5.4/32)
        Action: Push MPLS Header (Ethernet Type 0x8847)
                Set Field (MPLS label 27)
                Output (Physical Port number 14)


<<< Flow to send:
{
    "flow-node-inventory:flow": {
        "cookie": 654, 
        "cookie_mask": 255, 
        "flow-name": "Push MPLS Label", 
        "hard-timeout": 0, 
        "id": 28, 
        "idle-timeout": 0, 
        "instructions": {
            "instruction": [
                {
                    "apply-actions": {
                        "action": [
                            {
                                "order": 0, 
                                "push-mpls-action": {
                                    "ethernet-type": 34887
                                }
                            }, 
                            {
                                "order": 1, 
                                "set-field": {
                                    "protocol-match-fields": {
                                        "mpls-label": 27
                                    }
                                }
                            }, 
                            {
                                "order": 2, 
                                "output-action": {
                                    "output-node-connector": 14
                                }
                            }
                        ]
                    }, 
                    "order": 0
                }
            ]
        }, 
        "match": {
            "ethernet-match": {
                "ethernet-type": {
                    "type": 2048
                }
            }, 
            "in-port": 13, 
            "ipv4-destination": "10.12.5.4/32"
        }, 
        "priority": 1021, 
        "table_id": 0
    }
}
<<< Flow successfully added to the Controller


<<< Get configured flow from the Controller
<<< Flow successfully read from the Controller
Flow info:
{
    "flow-name": "Push MPLS Label", 
    "idle-timeout": 0, 
    "cookie_mask": 255, 
    "id": "28", 
    "priority": 1021, 
    "table_id": 0, 
    "cookie": 654, 
    "hard-timeout": 0, 
    "match": {
        "ipv4-destination": "10.12.5.4/32", 
        "in-port": "13", 
        "ethernet-match": {
            "ethernet-type": {
                "type": 2048
            }
        }
    }, 
    "instructions": {
        "instruction": [
            {
                "order": 0, 
                "apply-actions": {
                    "action": [
                        {
                            "output-action": {
                                "output-node-connector": "14"
                            }, 
                            "order": 2
                        }, 
                        {
                            "set-field": {
                                "protocol-match-fields": {
                                    "mpls-label": 27
                                }
                            }, 
                            "order": 1
                        }, 
                        {
                            "push-mpls-action": {
                                "ethernet-type": 34887
                            }, 
                            "order": 0
                        }
                    ]
                }
            }
        ]
    }
}


<<< Delete flow with id of '28' from the Controller's cache and from the table '0' on the 'openflow:1' node
<<< Flow successfully removed from the Controller


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo 23 Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< 'Controller': 192.168.59.103, 'OpenFlow' switch: 'openflow:1'


<<< Set OpenFlow flow on the Controller
        Match:  Ethernet Type (0x8847)
                Input Port (13)
                MPLS Label (27)
        Action: Set Field (MPLS Label 44)
                Output (Physical Port number 14)


<<< Flow to send:
{
    "flow-node-inventory:flow": {
        "cookie": 401, 
        "cookie_mask": 255, 
        "flow-name": "Change MPLS Label", 
        "hard-timeout": 0, 
        "id": 29, 
        "idle-timeout": 0, 
        "instructions": {
            "instruction": [
                {
                    "apply-actions": {
                        "action": [
                            {
                                "order": 0, 
                                "set-field": {
                                    "protocol-match-fields": {
                                        "mpls-label": 44
                                    }
                                }
                            }, 
                            {
                                "order": 1, 
                                "output-action": {
                                    "output-node-connector": 2
                                }
                            }
                        ]
                    }, 
                    "order": 0
                }
            ]
        }, 
        "match": {
            "ethernet-match": {
                "ethernet-type": {
                    "type": 34887
                }
            }, 
            "in-port": 13, 
            "protocol-match-fields": {
                "mpls-label": 27
            }
        }, 
        "priority": 1022, 
        "table_id": 0
    }
}
<<< Flow successfully added to the Controller


<<< Get configured flow from the Controller
<<< Flow successfully read from the Controller
Flow info:
{
    "flow-name": "Change MPLS Label", 
    "idle-timeout": 0, 
    "cookie_mask": 255, 
    "id": "29", 
    "priority": 1022, 
    "table_id": 0, 
    "cookie": 401, 
    "hard-timeout": 0, 
    "match": {
        "protocol-match-fields": {
            "mpls-label": 27
        }, 
        "in-port": "13", 
        "ethernet-match": {
            "ethernet-type": {
                "type": 34887
            }
        }
    }, 
    "instructions": {
        "instruction": [
            {
                "order": 0, 
                "apply-actions": {
                    "action": [
                        {
                            "output-action": {
                                "output-node-connector": "2"
                            }, 
                            "order": 1
                        }, 
                        {
                            "set-field": {
                                "protocol-match-fields": {
                                    "mpls-label": 44
                                }
                            }, 
                            "order": 0
                        }
                    ]
                }
            }
        ]
    }
}


<<< Delete flow with id of '29' from the Controller's cache and from the table '0' on the 'openflow:1' node
<<< Flow successfully removed from the Controller


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo 24 Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< 'Controller': 192.168.59.103, 'OpenFlow' switch: 'openflow:1'


<<< Set OpenFlow flow on the Controller
        Match:  Ethernet Type (0x8847)
                Input Port (14)
                MPLS Label (44)
        Action: Pop MPLS (Ethernet Type 34887)
                Output (Physical Port number 13)


<<< Flow to send:
{
    "flow-node-inventory:flow": {
        "cookie": 889, 
        "cookie_mask": 255, 
        "flow-name": "Strip MPLS Label", 
        "hard-timeout": 0, 
        "id": 30, 
        "idle-timeout": 0, 
        "instructions": {
            "instruction": [
                {
                    "apply-actions": {
                        "action": [
                            {
                                "order": 0, 
                                "pop-mpls-action": {
                                    "ethernet-type": 34887
                                }
                            }, 
                            {
                                "order": 1, 
                                "output-action": {
                                    "output-node-connector": 13
                                }
                            }
                        ]
                    }, 
                    "order": 0
                }
            ]
        }, 
        "match": {
            "ethernet-match": {
                "ethernet-type": {
                    "type": 34887
                }
            }, 
            "in-port": 14, 
            "protocol-match-fields": {
                "mpls-label": 44
            }
        }, 
        "priority": 1023, 
        "table_id": 0
    }
}
<<< Flow successfully added to the Controller


<<< Get configured flow from the Controller
<<< Flow successfully read from the Controller
Flow info:
{
    "flow-name": "Strip MPLS Label", 
    "idle-timeout": 0, 
    "cookie_mask": 255, 
    "id": "30", 
    "priority": 1023, 
    "table_id": 0, 
    "cookie": 889, 
    "hard-timeout": 0, 
    "match": {
        "protocol-match-fields": {
            "mpls-label": 44
        }, 
        "in-port": "14", 
        "ethernet-match": {
            "ethernet-type": {
                "type": 34887
            }
        }
    }, 
    "instructions": {
        "instruction": [
            {
                "order": 0, 
                "apply-actions": {
                    "action": [
                        {
                            "output-action": {
                                "output-node-connector": "13"
                            }, 
                            "order": 1
                        }, 
                        {
                            "pop-mpls-action": {
                                "ethernet-type": 34887
                            }, 
                            "order": 0
                        }
                    ]
                }
            }
        ]
    }
}


<<< Delete flow with id of '30' from the Controller's cache and from the table '0' on the 'openflow:1' node
<<< Flow successfully removed from the Controller


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo 25 Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< 'Controller': 192.168.59.103, 'OpenFlow' switch: 'openflow:1'


<<< Set OpenFlow flow on the Controller
        Match:  Ethernet Type (0x806)
                VLAN ID (998)
                Input Port (110)
        Action: Push VLAN (Ethernet Type 0x88a8)
                Set Field (VLAN ID 100)
                Push VLAN (Ethernet Type 0x8100)
                Set Field (VLAN ID 998)
                Output (Physical Port number 111)


<<< Flow to send:
{
    "flow-node-inventory:flow": {
        "cookie": 1000, 
        "cookie_mask": 255, 
        "flow-name": "[MLX1-A] Test flow (match:inport=110,arp;actions:push-QINQ-tag,mod-vlan=100,push-DOT1Q-tag,mod-vlan=998,output:111)", 
        "hard-timeout": 600, 
        "id": 31, 
        "idle-timeout": 300, 
        "instructions": {
            "instruction": [
                {
                    "apply-actions": {
                        "action": [
                            {
                                "order": 0, 
                                "push-vlan-action": {
                                    "ethernet-type": 34984
                                }
                            }, 
                            {
                                "order": 1, 
                                "set-field": {
                                    "vlan-match": {
                                        "vlan-id": {
                                            "vlan-id": 100, 
                                            "vlan-id-present": true
                                        }
                                    }
                                }
                            }, 
                            {
                                "order": 2, 
                                "push-vlan-action": {
                                    "ethernet-type": 33024
                                }
                            }, 
                            {
                                "order": 3, 
                                "set-field": {
                                    "vlan-match": {
                                        "vlan-id": {
                                            "vlan-id": 998, 
                                            "vlan-id-present": true
                                        }
                                    }
                                }
                            }, 
                            {
                                "order": 4, 
                                "output-action": {
                                    "output-node-connector": 111
                                }
                            }
                        ]
                    }, 
                    "order": 0
                }
            ]
        }, 
        "match": {
            "ethernet-match": {
                "ethernet-type": {
                    "type": 2054
                }
            }, 
            "in-port": 110, 
            "vlan-match": {
                "vlan-id": {
                    "vlan-id": 998, 
                    "vlan-id-present": true
                }
            }
        }, 
        "priority": 500, 
        "table_id": 0
    }
}
<<< Flow successfully added to the Controller


<<< Set OpenFlow flow on the Controller
        Match:  Ethernet Type (0x800)
                VLAN ID (998)
                Input Port (110)
        Action: Push VLAN (Ethernet Type 0x88a8)
                Set Field (VLAN ID 100)
                Push VLAN (Ethernet Type 0x8100)
                Set Field (VLAN ID 998)
                Output (Physical Port number 111)


<<< Flow to send:
{
    "flow-node-inventory:flow": {
        "cookie": 1000, 
        "cookie_mask": 255, 
        "flow-name": "[MLX1-A] Test flow (match:inport=110,ip;actions:push-QINQ-tag,mod-vlan=100,output:111)", 
        "hard-timeout": 600, 
        "id": 32, 
        "idle-timeout": 300, 
        "instructions": {
            "instruction": [
                {
                    "apply-actions": {
                        "action": [
                            {
                                "order": 0, 
                                "push-vlan-action": {
                                    "ethernet-type": 34984
                                }
                            }, 
                            {
                                "order": 1, 
                                "set-field": {
                                    "vlan-match": {
                                        "vlan-id": {
                                            "vlan-id": 100, 
                                            "vlan-id-present": true
                                        }
                                    }
                                }
                            }, 
                            {
                                "order": 2, 
                                "push-vlan-action": {
                                    "ethernet-type": 33024
                                }
                            }, 
                            {
                                "order": 3, 
                                "set-field": {
                                    "vlan-match": {
                                        "vlan-id": {
                                            "vlan-id": 998, 
                                            "vlan-id-present": true
                                        }
                                    }
                                }
                            }, 
                            {
                                "order": 4, 
                                "output-action": {
                                    "output-node-connector": 111
                                }
                            }
                        ]
                    }, 
                    "order": 0
                }
            ]
        }, 
        "match": {
            "ethernet-match": {
                "ethernet-type": {
                    "type": 2048
                }
            }, 
            "in-port": 110, 
            "vlan-match": {
                "vlan-id": {
                    "vlan-id": 998, 
                    "vlan-id-present": true
                }
            }
        }, 
        "priority": 500, 
        "table_id": 0
    }
}
<<< Flow successfully added to the Controller


<<< Set OpenFlow flow on the Controller
        Match:  Ethernet Type (0x806)
                VLAN ID (100)
                Input Port (111)
        Action: Pop VLAN
                Output (Physical Port number 110)


<<< Flow to send:
{
    "flow-node-inventory:flow": {
        "cookie": 1000, 
        "cookie_mask": 255, 
        "flow-name": "[MLX1-A] Test flow (match:inport=111,arp,vid=100;actions:pop-vlan-tag,output=110)", 
        "hard-timeout": 600, 
        "id": 33, 
        "idle-timeout": 300, 
        "instructions": {
            "instruction": [
                {
                    "apply-actions": {
                        "action": [
                            {
                                "order": 0, 
                                "pop-vlan-action": {}
                            }, 
                            {
                                "order": 1, 
                                "output-action": {
                                    "output-node-connector": 110
                                }
                            }
                        ]
                    }, 
                    "order": 0
                }
            ]
        }, 
        "match": {
            "ethernet-match": {
                "ethernet-type": {
                    "type": 2054
                }
            }, 
            "in-port": 111, 
            "vlan-match": {
                "vlan-id": {
                    "vlan-id": 100, 
                    "vlan-id-present": true
                }
            }
        }, 
        "priority": 500, 
        "table_id": 0
    }
}
<<< Flow successfully added to the Controller


<<< Set OpenFlow flow on the Controller
        Match:  Ethernet Type (0x800)
                VLAN ID (100)
                Input Port (111)
        Action: Pop VLAN
                Output (Physical Port number 110)


<<< Flow to send:
{
    "flow-node-inventory:flow": {
        "cookie": 1000, 
        "cookie_mask": 255, 
        "flow-name": "[MLX1-A] Test flow (match:inport=111,ip,vid=100;actions:pop-vlan-tag,output=110)", 
        "hard-timeout": 600, 
        "id": 34, 
        "idle-timeout": 300, 
        "instructions": {
            "instruction": [
                {
                    "apply-actions": {
                        "action": [
                            {
                                "order": 0, 
                                "pop-vlan-action": {}
                            }, 
                            {
                                "order": 1, 
                                "output-action": {
                                    "output-node-connector": 110
                                }
                            }
                        ]
                    }, 
                    "order": 0
                }
            ]
        }, 
        "match": {
            "ethernet-match": {
                "ethernet-type": {
                    "type": 2048
                }
            }, 
            "in-port": 111, 
            "vlan-match": {
                "vlan-id": {
                    "vlan-id": 100, 
                    "vlan-id-present": true
                }
            }
        }, 
        "priority": 500, 
        "table_id": 0
    }
}
<<< Flow successfully added to the Controller


<<< Get configured flows from the Controller
<<< Flow '31' successfully read from the Controller
Flow info:
{
    "flow-name": "[MLX1-A] Test flow (match:inport=110,arp;actions:push-QINQ-tag,mod-vlan=100,push-DOT1Q-tag,mod-vlan=998,output:111)", 
    "idle-timeout": 300, 
    "cookie_mask": 255, 
    "id": "31", 
    "priority": 500, 
    "table_id": 0, 
    "cookie": 1000, 
    "hard-timeout": 600, 
    "match": {
        "vlan-match": {
            "vlan-id": {
                "vlan-id": 998, 
                "vlan-id-present": true
            }
        }, 
        "in-port": "110", 
        "ethernet-match": {
            "ethernet-type": {
                "type": 2054
            }
        }
    }, 
    "instructions": {
        "instruction": [
            {
                "order": 0, 
                "apply-actions": {
                    "action": [
                        {
                            "order": 2, 
                            "push-vlan-action": {
                                "ethernet-type": 33024
                            }
                        }, 
                        {
                            "set-field": {
                                "vlan-match": {
                                    "vlan-id": {
                                        "vlan-id": 100, 
                                        "vlan-id-present": true
                                    }
                                }
                            }, 
                            "order": 1
                        }, 
                        {
                            "order": 0, 
                            "push-vlan-action": {
                                "ethernet-type": 34984
                            }
                        }, 
                        {
                            "output-action": {
                                "output-node-connector": "111"
                            }, 
                            "order": 4
                        }, 
                        {
                            "set-field": {
                                "vlan-match": {
                                    "vlan-id": {
                                        "vlan-id": 998, 
                                        "vlan-id-present": true
                                    }
                                }
                            }, 
                            "order": 3
                        }
                    ]
                }
            }
        ]
    }
}
<<< Flow '32' successfully read from the Controller
Flow info:
{
    "flow-name": "[MLX1-A] Test flow (match:inport=110,ip;actions:push-QINQ-tag,mod-vlan=100,output:111)", 
    "idle-timeout": 300, 
    "cookie_mask": 255, 
    "id": "32", 
    "priority": 500, 
    "table_id": 0, 
    "cookie": 1000, 
    "hard-timeout": 600, 
    "match": {
        "vlan-match": {
            "vlan-id": {
                "vlan-id": 998, 
                "vlan-id-present": true
            }
        }, 
        "in-port": "110", 
        "ethernet-match": {
            "ethernet-type": {
                "type": 2048
            }
        }
    }, 
    "instructions": {
        "instruction": [
            {
                "order": 0, 
                "apply-actions": {
                    "action": [
                        {
                            "order": 2, 
                            "push-vlan-action": {
                                "ethernet-type": 33024
                            }
                        }, 
                        {
                            "set-field": {
                                "vlan-match": {
                                    "vlan-id": {
                                        "vlan-id": 100, 
                                        "vlan-id-present": true
                                    }
                                }
                            }, 
                            "order": 1
                        }, 
                        {
                            "order": 0, 
                            "push-vlan-action": {
                                "ethernet-type": 34984
                            }
                        }, 
                        {
                            "output-action": {
                                "output-node-connector": "111"
                            }, 
                            "order": 4
                        }, 
                        {
                            "set-field": {
                                "vlan-match": {
                                    "vlan-id": {
                                        "vlan-id": 998, 
                                        "vlan-id-present": true
                                    }
                                }
                            }, 
                            "order": 3
                        }
                    ]
                }
            }
        ]
    }
}
<<< Flow '33' successfully read from the Controller
Flow info:
{
    "flow-name": "[MLX1-A] Test flow (match:inport=111,arp,vid=100;actions:pop-vlan-tag,output=110)", 
    "idle-timeout": 300, 
    "cookie_mask": 255, 
    "id": "33", 
    "priority": 500, 
    "table_id": 0, 
    "cookie": 1000, 
    "hard-timeout": 600, 
    "match": {
        "vlan-match": {
            "vlan-id": {
                "vlan-id": 100, 
                "vlan-id-present": true
            }
        }, 
        "in-port": "111", 
        "ethernet-match": {
            "ethernet-type": {
                "type": 2054
            }
        }
    }, 
    "instructions": {
        "instruction": [
            {
                "order": 0, 
                "apply-actions": {
                    "action": [
                        {
                            "output-action": {
                                "output-node-connector": "110"
                            }, 
                            "order": 1
                        }, 
                        {
                            "order": 0, 
                            "pop-vlan-action": {}
                        }
                    ]
                }
            }
        ]
    }
}
<<< Flow '34' successfully read from the Controller
Flow info:
{
    "flow-name": "[MLX1-A] Test flow (match:inport=111,ip,vid=100;actions:pop-vlan-tag,output=110)", 
    "idle-timeout": 300, 
    "cookie_mask": 255, 
    "id": "34", 
    "priority": 500, 
    "table_id": 0, 
    "cookie": 1000, 
    "hard-timeout": 600, 
    "match": {
        "vlan-match": {
            "vlan-id": {
                "vlan-id": 100, 
                "vlan-id-present": true
            }
        }, 
        "in-port": "111", 
        "ethernet-match": {
            "ethernet-type": {
                "type": 2048
            }
        }
    }, 
    "instructions": {
        "instruction": [
            {
                "order": 0, 
                "apply-actions": {
                    "action": [
                        {
                            "output-action": {
                                "output-node-connector": "110"
                            }, 
                            "order": 1
                        }, 
                        {
                            "order": 0, 
                            "pop-vlan-action": {}
                        }
                    ]
                }
            }
        ]
    }
}


<<< Delete flows from the Controller's cache and from the table '0' on the 'openflow:1' node
<<< Flow with id of '31' successfully removed from the Controller
<<< Flow with id of '32' successfully removed from the Controller
<<< Flow with id of '33' successfully removed from the Controller
<<< Flow with id of '34' successfully removed from the Controller


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo 26 Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< 'Controller': 192.168.59.103, 'OpenFlow' switch: 'openflow:1'


<<< Remove configured flows from the Controller


<<< Set OpenFlow flows on the Controller


<<< Flows to be configured:
 cookie=0x1771,table=0,idle_timeout=12000,hard_timeout=12000,priority=1000 matches={eth_type=0x806,eth_src=00:11:22:33:44:55,eth_dst=aa:bb:cc:dd:ee:ff} actions={drop}
 cookie=0x1b59,table=0,idle_timeout=2400,hard_timeout=2400,priority=2000 matches={eth_type=0x800,ipv4_src=1.2.3.4/32,ipv4_dst=192.168.1.11/32} actions={output=CONTROLLER:60}
 cookie=0x320,table=0,idle_timeout=1800,hard_timeout=1800,priority=3000 matches={in_port=1} actions={output=5,output=6,output=7}
 cookie=0x4d2,table=0,idle_timeout=0,hard_timeout=0,priority=4000 matches={in_port=110,eth_type=0x806,vlan_vid=998} actions={push_vlan=0x88a8,push_vlan=0x8100,set_vlan_vid=100,set_vlan_vid=998,output=111}
 cookie=0x4d2,table=0,idle_timeout=0,hard_timeout=0,priority=4000 matches={in_port=110,eth_type=0x800,vlan_vid=998} actions={push_vlan=0x88a8,push_vlan=0x8100,set_vlan_vid=100,set_vlan_vid=998,output=111}
 cookie=0x4d2,table=0,idle_timeout=0,hard_timeout=0,priority=4000 matches={in_port=111,eth_type=0x806,vlan_vid=100} actions={pop_vlan,output=110}
 cookie=0x4d2,table=0,idle_timeout=0,hard_timeout=0,priority=4000 matches={in_port=111,eth_type=0x800,vlan_vid=100} actions={pop_vlan,output=110}


<<< Flows successfully added to the Controller


<<< Get configured flows from the Controller


<<< Configured flows:
 cookie=0x1771,table=0,idle_timeout=12000,hard_timeout=12000,priority=1000 matches={eth_type=0x806,eth_src=00:11:22:33:44:55,eth_dst=aa:bb:cc:dd:ee:ff} actions={drop}
 cookie=0x1b59,table=0,idle_timeout=2400,hard_timeout=2400,priority=2000 matches={eth_type=0x800,ipv4_src=1.2.3.4/32,ipv4_dst=192.168.1.11/32} actions={output=CONTROLLER:60}
 cookie=0x320,table=0,idle_timeout=1800,hard_timeout=1800,priority=3000 matches={in_port=1} actions={output=7,output=6,output=5}
 cookie=0x4d2,table=0,idle_timeout=0,hard_timeout=0,priority=4000 matches={in_port=110,eth_type=0x800,vlan_vid=998} actions={push_vlan=0x8100,push_vlan=0x88a8,set_vlan_vid=100,set_vlan_vid=998,output=111}
 cookie=0x4d2,table=0,idle_timeout=0,hard_timeout=0,priority=4000 matches={in_port=110,eth_type=0x806,vlan_vid=998} actions={push_vlan=0x8100,push_vlan=0x88a8,set_vlan_vid=100,set_vlan_vid=998,output=111}
 cookie=0x4d2,table=0,idle_timeout=0,hard_timeout=0,priority=4000 matches={in_port=111,eth_type=0x800,vlan_vid=100} actions={pop_vlan,output=110}
 cookie=0x4d2,table=0,idle_timeout=0,hard_timeout=0,priority=4000 matches={in_port=111,eth_type=0x806,vlan_vid=100} actions={pop_vlan,output=110}


<<< Get configured flows by IDs from the Controller:
 -- Flow id '12'
 cookie=0x1771,table=0,idle_timeout=12000,hard_timeout=12000,priority=1000 matches={eth_type=0x806,eth_src=00:11:22:33:44:55,eth_dst=aa:bb:cc:dd:ee:ff} actions={drop}
 -- Flow id '13'
 cookie=0x1b59,table=0,idle_timeout=2400,hard_timeout=2400,priority=2000 matches={eth_type=0x800,ipv4_src=1.2.3.4/32,ipv4_dst=192.168.1.11/32} actions={output=CONTROLLER:60}
 -- Flow id '14'
 cookie=0x320,table=0,idle_timeout=1800,hard_timeout=1800,priority=3000 matches={in_port=1} actions={output=7,output=6,output=5}
 -- Flow id '15'
 cookie=0x4d2,table=0,idle_timeout=0,hard_timeout=0,priority=4000 matches={in_port=110,eth_type=0x806,vlan_vid=998} actions={push_vlan=0x8100,push_vlan=0x88a8,set_vlan_vid=100,set_vlan_vid=998,output=111}
 -- Flow id '16'
 cookie=0x4d2,table=0,idle_timeout=0,hard_timeout=0,priority=4000 matches={in_port=110,eth_type=0x800,vlan_vid=998} actions={push_vlan=0x8100,push_vlan=0x88a8,set_vlan_vid=100,set_vlan_vid=998,output=111}
 -- Flow id '17'
 cookie=0x4d2,table=0,idle_timeout=0,hard_timeout=0,priority=4000 matches={in_port=111,eth_type=0x806,vlan_vid=100} actions={pop_vlan,output=110}
 -- Flow id '18'
 cookie=0x4d2,table=0,idle_timeout=0,hard_timeout=0,priority=4000 matches={in_port=111,eth_type=0x800,vlan_vid=100} actions={pop_vlan,output=110}


<<< Remove configured flows from the Controller


<<< Get configured flows from the Controller


<<< No configured flows


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo 27 Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


<<< Controller '192.168.59.103:8181'


<<< Get OpenFlow Network Topology information


<<< OpenFlow network topologies
       'flow:1'


<<< Information for 'flow:1' network topology:

        Number of flows              : 3
        Number of switches           : 1
        Number of inter-switch links : 0
        Number of hosts              : 0


<<< OpenFlow switches in 'flow:1' topology

        IP Address       OpenFlow Id                   
        ---------------  ------------------------------
        192.168.59.3     openflow:1                    

<<< Neighborhood information for 'openflow:1' switch ports

        Port '1'
            None

        Port '2'
            None


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo 28 Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


<<< Controller '192.168.59.103:8181'


<<< Get OpenFlow Inventory Information


<<< OpenFlow switches

        IP Address       OpenFlow Id                   
        ---------------  ------------------------------
        192.168.59.3     openflow:1                    

<<< Information for 'openflow:1' switch

        IP Address      : 192.168.59.3
        Max tables      : 254
        Number of flows : 3
        Capabilities    : TABLE-STATS, ARP-MATCH-IP
                          PORT-STATS, QUEUE-STATS
                          FLOW-STATS

        Table Id  Flows Cnt 
        --------  --------- 
        0         3         

        Port Num  OpenFlow Id     
        --------  ------------------------------
        1         openflow:1:1                  
        2         openflow:1:2                  
        LOCAL     openflow:1:LOCAL              

<<< Detailed information for 'openflow:1' switch

        Manufacturer    : Nicira, Inc.
        Software        : 2.0.2
        Hardware        : Open vSwitch
        Serial number   : None

        OpenFlow Id     : openflow:1
        IP Address      : 192.168.59.3
        Description     : None
        Max buffers     : 256
        Max tables      : 254
        Number of flows : 3
        Capabilities    : TABLE-STATS, ARP-MATCH-IP
                          PORT-STATS, QUEUE-STATS
                          FLOW-STATS

        Port '1'
            OpenFlow Id : openflow:1:1
            Name        : s1-eth1
            MAC address : 2e:3c:93:c1:f3:a4
            Link state  : UP
            Oper state  : FORWARDING
            Pkts RX     : 0
            Pkts TX     : 0
            Bytes RX    : 0
            Bytes TX    : 0

        Port '2'
            OpenFlow Id : openflow:1:2
            Name        : s1-eth2
            MAC address : 2a:ed:d7:e2:b5:2b
            Link state  : UP
            Oper state  : FORWARDING
            Pkts RX     : 0
            Pkts TX     : 0
            Bytes RX    : 0
            Bytes TX    : 0

        Port 'LOCAL'
            OpenFlow Id : openflow:1:LOCAL
            Name        : s1
            MAC address : 6a:5d:69:d0:c5:44
            Link state  : UP
            Oper state  : FORWARDING
            Pkts RX     : 0
            Pkts TX     : 0
            Bytes RX    : 0
            Bytes TX    : 0


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo 3 Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


<<< Creating Controller instance
'Controller':
{
    "adminName": "admin", 
    "adminPassword": "admin", 
    "ipAddr": "192.168.59.103", 
    "portNum": "8181"
}


<<< Get detailed information about ports on OpenFlow node 'openflow:1'
Port '1' info:
{
    "flow-node-inventory:port-number": "1", 
    "opendaylight-port-statistics:flow-capable-node-connector-statistics": {
        "receive-frame-error": 0, 
        "transmit-drops": 0, 
        "packets": {
            "received": 6, 
            "transmitted": 595
        }, 
        "receive-errors": 0, 
        "bytes": {
            "received": 480, 
            "transmitted": 37499
        }, 
        "collision-count": 0, 
        "receive-drops": 0, 
        "receive-crc-error": 0, 
        "duration": {}, 
        "transmit-errors": 0, 
        "receive-over-run-error": 0
    }, 
    "flow-node-inventory:advertised-features": "", 
    "flow-node-inventory:configuration": "", 
    "flow-node-inventory:name": "s1-eth1", 
    "flow-node-inventory:hardware-address": "2E:3C:93:C1:F3:A4", 
    "flow-node-inventory:peer-features": "", 
    "flow-node-inventory:state": {
        "link-down": false, 
        "live": false, 
        "blocked": false
    }, 
    "flow-node-inventory:supported": "", 
    "flow-node-inventory:current-feature": "copper ten-gb-fd", 
    "id": "openflow:1:1"
}
Port '2' info:
{
    "flow-node-inventory:port-number": "2", 
    "opendaylight-port-statistics:flow-capable-node-connector-statistics": {
        "receive-frame-error": 0, 
        "transmit-drops": 0, 
        "packets": {
            "received": 7, 
            "transmitted": 595
        }, 
        "receive-errors": 0, 
        "bytes": {
            "received": 558, 
            "transmitted": 37499
        }, 
        "collision-count": 0, 
        "receive-drops": 0, 
        "receive-crc-error": 0, 
        "duration": {}, 
        "transmit-errors": 0, 
        "receive-over-run-error": 0
    }, 
    "flow-node-inventory:advertised-features": "", 
    "flow-node-inventory:configuration": "", 
    "flow-node-inventory:name": "s1-eth2", 
    "flow-node-inventory:hardware-address": "2A:ED:D7:E2:B5:2B", 
    "flow-node-inventory:peer-features": "", 
    "flow-node-inventory:state": {
        "link-down": false, 
        "live": false, 
        "blocked": false
    }, 
    "flow-node-inventory:supported": "", 
    "flow-node-inventory:current-feature": "copper ten-gb-fd", 
    "id": "openflow:1:2"
}
Port 'LOCAL' info:
{
    "flow-node-inventory:port-number": "LOCAL", 
    "opendaylight-port-statistics:flow-capable-node-connector-statistics": {
        "receive-frame-error": 0, 
        "transmit-drops": 0, 
        "packets": {
            "received": 0, 
            "transmitted": 593
        }, 
        "receive-errors": 0, 
        "bytes": {
            "received": 0, 
            "transmitted": 41510
        }, 
        "collision-count": 0, 
        "receive-drops": 0, 
        "receive-crc-error": 0, 
        "duration": {}, 
        "transmit-errors": 0, 
        "receive-over-run-error": 0
    }, 
    "flow-node-inventory:advertised-features": "", 
    "flow-node-inventory:configuration": "", 
    "flow-node-inventory:name": "s1", 
    "flow-node-inventory:hardware-address": "6A:5D:69:D0:C5:44", 
    "flow-node-inventory:peer-features": "", 
    "flow-node-inventory:state": {
        "link-down": false, 
        "live": false, 
        "blocked": false
    }, 
    "flow-node-inventory:supported": "", 
    "flow-node-inventory:current-feature": "", 
    "id": "openflow:1:LOCAL"
}


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo 31 Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< 'Controller': 192.168.59.103, 'OpenFlow' switch: 'openflow:1'


<<< Set OpenFlow flow on the Controller
        Match:  Input Port (109)
                Ethernet Type (0x800)
                IPv4 Destination Address (10.1.2.3/32)
        Action: Set IPv4 ToS (tos 8)
                Output (Port number 112)


<<< Flow to send:
{
    "flow-node-inventory:flow": {
        "cookie": 1000, 
        "flow-name": "Set IPv4 ToS action", 
        "hard-timeout": 0, 
        "id": 110, 
        "idle-timeout": 0, 
        "instructions": {
            "instruction": [
                {
                    "apply-actions": {
                        "action": [
                            {
                                "order": 0, 
                                "set-nw-tos-action": {
                                    "tos": 8
                                }
                            }, 
                            {
                                "order": 1, 
                                "output-action": {
                                    "output-node-connector": 112
                                }
                            }
                        ]
                    }, 
                    "order": 0
                }
            ]
        }, 
        "match": {
            "ethernet-match": {
                "ethernet-type": {
                    "type": 2048
                }
            }, 
            "in-port": 109, 
            "ipv4-destination": "10.1.2.3/32"
        }, 
        "priority": 600, 
        "table_id": 0
    }
}
<<< Flow successfully added to the Controller


<<< Set OpenFlow flow on the Controller
        Match:  Input Port (109)
                Ethernet Type (0x800)
                IPv4 Destination Address (192.1.2.3/32)
        Action: Set Field (IP DSCP 40)
                Output (Port number 112)


<<< Flow to send:
{
    "flow-node-inventory:flow": {
        "cookie": 1000, 
        "flow-name": "Set Field (IP DSCP) action", 
        "hard-timeout": 0, 
        "id": 111, 
        "idle-timeout": 0, 
        "instructions": {
            "instruction": [
                {
                    "apply-actions": {
                        "action": [
                            {
                                "order": 0, 
                                "set-field": {
                                    "ip-match": {
                                        "ip-dscp": 40
                                    }
                                }
                            }, 
                            {
                                "order": 1, 
                                "output-action": {
                                    "output-node-connector": 112
                                }
                            }
                        ]
                    }, 
                    "order": 0
                }
            ]
        }, 
        "match": {
            "ethernet-match": {
                "ethernet-type": {
                    "type": 2048
                }
            }, 
            "in-port": 109, 
            "ipv4-destination": "192.1.2.3/32"
        }, 
        "priority": 600, 
        "table_id": 0
    }
}
<<< Flow successfully added to the Controller


<<< Delete flows from the Controller's cache and from the table '0' on the 'openflow:1' node
<<< Flow with id of '110' successfully removed from the Controller
<<< Flow with id of '111' successfully removed from the Controller


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo 32 Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


<<< Controller '192.168.59.103:8181'

<<< Get OpenFlow switches information

<<< OpenFlow switches in the inventory store

        IP Address       OpenFlow Id                   
        ---------------  ------------------------------
        192.168.59.3     openflow:1                    

<<< Get Group Table Information

        Switch 'openflow:1'

success
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo 33 Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

<<< 'Controller': 192.168.59.103, 'OpenFlow' switch: 'openflow:1'

<<< Get OpenFlow Groups Information

        Configured Groups IDs  : none
        Operational Groups IDs : none

<<< Create Group

        Group Type : ALL
        Group ID   : 12
        Group Name : "Example of 'multicast/broadcast' group"
        Buckets    :
                     [0] actions: Output (110)
                     [1] actions: Output (111)
                     [2] actions: Output (112)

<<< Group to create:
{
    "flow-node-inventory:group": {
        "buckets": {
            "bucket": [
                {
                    "action": [
                        {
                            "order": 0, 
                            "output-action": {
                                "output-node-connector": 110
                            }
                        }
                    ], 
                    "bucket-id": 0
                }, 
                {
                    "action": [
                        {
                            "order": 0, 
                            "output-action": {
                                "output-node-connector": 111
                            }
                        }
                    ], 
                    "bucket-id": 1
                }, 
                {
                    "action": [
                        {
                            "order": 0, 
                            "output-action": {
                                "output-node-connector": 112
                            }
                        }
                    ], 
                    "bucket-id": 2
                }
            ]
        }, 
        "group-id": 12, 
        "group-name": "Example of 'multicast/broadcast' group", 
        "group-type": "group-all"
    }
}
<<< Group successfully added to the Controller

<<< Get OpenFlow Groups Information

        Configured Groups IDs  : 12
        Operational Groups IDs : none

<<< Remove all groups from the Controller
<<< Group '12' successfully removed from the Controller

<<< Get OpenFlow Groups Information

        Configured Groups IDs  : none
        Operational Groups IDs : none


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo 34 Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

<<< 'Controller': 192.168.59.103, 'OpenFlow' switch: 'openflow:1'

<<< Get OpenFlow Groups Information

        Configured Groups IDs  : none
        Operational Groups IDs : none

<<< Create Group

        Group Type : SELECT
        Group ID   : 13
        Group Name : "Example of 'load balancing' group"
        Buckets    :
                     [0] weight : 60
                         actions: Output (110)
                     [1] weight : 30
                         actions: Output (111)
                     [2] weight : 10
                         actions: Output (112)

<<< Group to create:
{
    "flow-node-inventory:group": {
        "buckets": {
            "bucket": [
                {
                    "action": [
                        {
                            "order": 0, 
                            "output-action": {
                                "output-node-connector": 110
                            }
                        }
                    ], 
                    "bucket-id": 0, 
                    "weight": 60
                }, 
                {
                    "action": [
                        {
                            "order": 0, 
                            "output-action": {
                                "output-node-connector": 111
                            }
                        }
                    ], 
                    "bucket-id": 1, 
                    "weight": 30
                }, 
                {
                    "action": [
                        {
                            "order": 0, 
                            "output-action": {
                                "output-node-connector": 112
                            }
                        }
                    ], 
                    "bucket-id": 2, 
                    "weight": 10
                }
            ]
        }, 
        "group-id": 13, 
        "group-name": "Example of 'load balancing' group", 
        "group-type": "group-select"
    }
}
<<< Group successfully added

<<< Get group '13' configuration status
Group configuration info:
{
    "group-name": "Example of 'load balancing' group", 
    "buckets": {
        "bucket": [
            {
                "action": [
                    {
                        "output-action": {
                            "output-node-connector": "110"
                        }, 
                        "order": 0
                    }
                ], 
                "bucket-id": 0, 
                "weight": 60
            }, 
            {
                "action": [
                    {
                        "output-action": {
                            "output-node-connector": "112"
                        }, 
                        "order": 0
                    }
                ], 
                "bucket-id": 2, 
                "weight": 10
            }, 
            {
                "action": [
                    {
                        "output-action": {
                            "output-node-connector": "111"
                        }, 
                        "order": 0
                    }
                ], 
                "bucket-id": 1, 
                "weight": 30
            }
        ]
    }, 
    "group-type": "group-select", 
    "group-id": 13
}

<<< Get group '13' operational status

!!!Error, reason: Requested data not found

<<< Get group '13' statistics information

!!!Error, reason: Requested data not found

<<< Get OpenFlow Groups Information

        Configured Groups IDs  : 13
        Operational Groups IDs : none

<<< Remove all groups from the Controller
<<< Group '13' successfully removed from the Controller

<<< Get OpenFlow Groups Information

        Configured Groups IDs  : none
        Operational Groups IDs : none

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo 35 Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

<<< 'Controller': 192.168.59.103, 'OpenFlow' switch: 'openflow:1'

<<< Get OpenFlow Groups Information

        Configured Groups IDs  : none
        Operational Groups IDs : none

<<< Create Group

        Group Type : INDIRECT
        Group ID   : 14
        Group Name : "Example of 'set of common actions' group "
        Buckets    :
                     [0] actions : Pop VLAN
                                   Output (110)

<<< Group to create:
{
    "flow-node-inventory:group": {
        "buckets": {
            "bucket": [
                {
                    "action": [
                        {
                            "order": 0, 
                            "pop-vlan-action": {}
                        }, 
                        {
                            "order": 1, 
                            "output-action": {
                                "output-node-connector": 110
                            }
                        }
                    ], 
                    "bucket-id": 0
                }
            ]
        }, 
        "group-id": 14, 
        "group-name": "Example of 'set of common actions' group ", 
        "group-type": "group-indirect"
    }
}
<<< Group successfully added

<<< Get group '14' configuration status
Group configuration info:
{
    "group-name": "Example of 'set of common actions' group", 
    "buckets": {
        "bucket": [
            {
                "action": [
                    {
                        "output-action": {
                            "output-node-connector": "110"
                        }, 
                        "order": 1
                    }, 
                    {
                        "order": 0, 
                        "pop-vlan-action": {}
                    }
                ], 
                "bucket-id": 0
            }
        ]
    }, 
    "group-type": "group-indirect", 
    "group-id": 14
}

<<< Get group '14' operational status

!!!Error, reason: Requested data not found

<<< Get group '14' statistics information

!!!Error, reason: Requested data not found

<<< Get OpenFlow Groups Information

        Configured Groups IDs  : 14
        Operational Groups IDs : none

<<< Remove all groups from the Controller
<<< Group '14' successfully removed from the Controller

<<< Get OpenFlow Groups Information

        Configured Groups IDs  : none
        Operational Groups IDs : none

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo 36 Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

<<< 'Controller': 192.168.59.103, 'OpenFlow' switch: 'openflow:1'

<<< Get OpenFlow Groups Information

        Configured Groups IDs  : none
        Operational Groups IDs : none

<<< Create Group

        Group Type : FF
        Group ID   : 15
        Group Name : "Example of 'link fast failover' group"
        Buckets    :
                     [0] watch-port: 110
                         actions: Output (110)
                     [1] watch-port: 111
                         actions: Output (111)
                     [2] watch-port: 112
                         actions: Output (112)

<<< Group to create:
{
    "flow-node-inventory:group": {
        "buckets": {
            "bucket": [
                {
                    "action": [
                        {
                            "order": 0, 
                            "output-action": {
                                "output-node-connector": 110
                            }
                        }
                    ], 
                    "bucket-id": 0, 
                    "watch_port": 110
                }, 
                {
                    "action": [
                        {
                            "order": 0, 
                            "output-action": {
                                "output-node-connector": 111
                            }
                        }
                    ], 
                    "bucket-id": 1, 
                    "watch_port": 111
                }, 
                {
                    "action": [
                        {
                            "order": 0, 
                            "output-action": {
                                "output-node-connector": 112
                            }
                        }
                    ], 
                    "bucket-id": 2, 
                    "watch_port": 112
                }
            ]
        }, 
        "group-id": 15, 
        "group-name": "Example of 'link fast failover' group", 
        "group-type": "group-ff"
    }
}
<<< Group successfully added

<<< Get group '15' configuration status
Group configuration info:
{
    "group-name": "Example of 'link fast failover' group", 
    "buckets": {
        "bucket": [
            {
                "action": [
                    {
                        "output-action": {
                            "output-node-connector": "110"
                        }, 
                        "order": 0
                    }
                ], 
                "bucket-id": 0, 
                "watch_port": 110
            }, 
            {
                "action": [
                    {
                        "output-action": {
                            "output-node-connector": "112"
                        }, 
                        "order": 0
                    }
                ], 
                "bucket-id": 2, 
                "watch_port": 112
            }, 
            {
                "action": [
                    {
                        "output-action": {
                            "output-node-connector": "111"
                        }, 
                        "order": 0
                    }
                ], 
                "bucket-id": 1, 
                "watch_port": 111
            }
        ]
    }, 
    "group-type": "group-ff", 
    "group-id": 15
}

<<< Get group '15' operational status

!!!Error, reason: Requested data not found

<<< Get group '15' statistics information

!!!Error, reason: Requested data not found

<<< Get OpenFlow Groups Information

        Configured Groups IDs  : 15
        Operational Groups IDs : none

<<< Remove all groups from the Controller
<<< Group '15' successfully removed from the Controller

<<< Get OpenFlow Groups Information

        Configured Groups IDs  : none
        Operational Groups IDs : none

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo 4 Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< 'Controller': 192.168.59.103, 'OpenFlow' switch: openflow:1


<<< Set OpenFlow flow on the Controller
        Match:  Ethernet Type (0x800)
                IPv4 Destination Address (10.11.12.13/24)
        Action: Drop


<<< Flow to send:
{
    "flow-node-inventory:flow": {
        "id": 11, 
        "instructions": {
            "instruction": [
                {
                    "apply-actions": {
                        "action": [
                            {
                                "drop-action": {}, 
                                "order": 0
                            }
                        ]
                    }, 
                    "order": 0
                }
            ]
        }, 
        "match": {
            "ethernet-match": {
                "ethernet-type": {
                    "type": 2048
                }
            }, 
            "ipv4-destination": "10.11.12.13/24"
        }, 
        "priority": 1000, 
        "table_id": 0
    }
}
<<< Flow successfully added to the Controller


<<< Get configured flow from the Controller
<<< Flow successfully read from the Controller
Flow info:
{
    "priority": 1000, 
    "table_id": 0, 
    "id": "11", 
    "match": {
        "ipv4-destination": "10.11.12.13/24", 
        "ethernet-match": {
            "ethernet-type": {
                "type": 2048
            }
        }
    }, 
    "instructions": {
        "instruction": [
            {
                "order": 0, 
                "apply-actions": {
                    "action": [
                        {
                            "order": 0, 
                            "drop-action": {}
                        }
                    ]
                }
            }
        ]
    }
}


<<< Delete flow with id of '11' from the Controller's cache and from the table '0' on the 'openflow:1' node
<<< Flow successfully removed from the Controller


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo 5 Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< 'Controller': 192.168.59.103, 'OpenFlow' switch: openflow:1


<<< Set OpenFlow flow on the Controller
        Match:  Ethernet Type (0x800)
                IPv4 Source Address (10.11.12.13/24)
        Action: Drop


<<< Flow to send:
{
    "flow-node-inventory:flow": {
        "id": 12, 
        "instructions": {
            "instruction": [
                {
                    "apply-actions": {
                        "action": [
                            {
                                "drop-action": {}, 
                                "order": 0
                            }
                        ]
                    }, 
                    "order": 0
                }
            ]
        }, 
        "match": {
            "ethernet-match": {
                "ethernet-type": {
                    "type": 2048
                }
            }, 
            "ipv4-source": "10.11.12.13/24"
        }, 
        "priority": 1000, 
        "table_id": 0
    }
}
<<< Flow successfully added to the Controller


<<< Get configured flow from the Controller
<<< Flow successfully read from the Controller
Flow info:
{
    "priority": 1000, 
    "table_id": 0, 
    "id": "12", 
    "match": {
        "ipv4-source": "10.11.12.13/24", 
        "ethernet-match": {
            "ethernet-type": {
                "type": 2048
            }
        }
    }, 
    "instructions": {
        "instruction": [
            {
                "order": 0, 
                "apply-actions": {
                    "action": [
                        {
                            "order": 0, 
                            "drop-action": {}
                        }
                    ]
                }
            }
        ]
    }
}


<<< Delete flow with id of '12' from the Controller's cache and from the table '0' on the 'openflow:1' node
<<< Flow successfully removed from the Controller


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo 6 Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< 'Controller': 192.168.59.103, 'OpenFlow' switch: 'openflow:1'


<<< Set OpenFlow flow on the Controller
        Match:  Ethernet Type (0x2d)
                Ethernet Source Address (00:01:02:03:04:05)
                Ethernet Destination Address (aa:bb:cc:dd:ee:ff)
        Action: Drop


<<< Flow to send:
{
    "flow-node-inventory:flow": {
        "id": 14, 
        "instructions": {
            "instruction": [
                {
                    "apply-actions": {
                        "action": [
                            {
                                "drop-action": {}, 
                                "order": 0
                            }
                        ]
                    }, 
                    "order": 0
                }
            ]
        }, 
        "match": {
            "ethernet-match": {
                "ethernet-destination": {
                    "address": "aa:bb:cc:dd:ee:ff"
                }, 
                "ethernet-source": {
                    "address": "00:01:02:03:04:05"
                }, 
                "ethernet-type": {
                    "type": 45
                }
            }
        }, 
        "priority": 1000, 
        "table_id": 0
    }
}
<<< Flow successfully added to the Controller


<<< Get configured flow from the Controller
<<< Flow successfully read from the Controller
Flow info:
{
    "priority": 1000, 
    "table_id": 0, 
    "id": "14", 
    "match": {
        "ethernet-match": {
            "ethernet-source": {
                "address": "00:01:02:03:04:05"
            }, 
            "ethernet-type": {
                "type": 45
            }, 
            "ethernet-destination": {
                "address": "aa:bb:cc:dd:ee:ff"
            }
        }
    }, 
    "instructions": {
        "instruction": [
            {
                "order": 0, 
                "apply-actions": {
                    "action": [
                        {
                            "order": 0, 
                            "drop-action": {}
                        }
                    ]
                }
            }
        ]
    }
}


<<< Delete flow with id of '14' from the Controller's cache and from the table '0' on the 'openflow:1' node
<<< Flow successfully removed from the Controller


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo 7 Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< 'Controller': 192.168.59.103, 'OpenFlow' switch: 'openflow:1'


<<< Set OpenFlow flow on the Controller
        Match:  Ethernet Type (0x800)
                Ethernet Source Address (00:1a:1b:00:22:aa)
                Ethernet Destination Address (00:2b:00:60:ff:f1)
                IPv4 Source Address (44.44.44.1/24)
                IPv4 Destination Address (55.55.55.1/16)
                Input Port (13)
        Action: Output (CONTROLLER)


<<< Flow to send:
{
    "flow-node-inventory:flow": {
        "id": 15, 
        "instructions": {
            "instruction": [
                {
                    "apply-actions": {
                        "action": [
                            {
                                "order": 0, 
                                "output-action": {
                                    "max-length": 60, 
                                    "output-node-connector": "CONTROLLER"
                                }
                            }
                        ]
                    }, 
                    "order": 0
                }
            ]
        }, 
        "match": {
            "ethernet-match": {
                "ethernet-destination": {
                    "address": "00:2b:00:60:ff:f1"
                }, 
                "ethernet-source": {
                    "address": "00:1a:1b:00:22:aa"
                }, 
                "ethernet-type": {
                    "type": 2048
                }
            }, 
            "in-port": 13, 
            "ipv4-destination": "55.55.55.1/16", 
            "ipv4-source": "44.44.44.1/24"
        }, 
        "priority": 1005, 
        "table_id": 0
    }
}
<<< Flow successfully added to the Controller


<<< Get configured flow from the Controller
<<< Flow successfully read from the Controller
Flow info:
{
    "priority": 1005, 
    "table_id": 0, 
    "id": "15", 
    "match": {
        "ipv4-destination": "55.55.55.1/16", 
        "in-port": "13", 
        "ipv4-source": "44.44.44.1/24", 
        "ethernet-match": {
            "ethernet-source": {
                "address": "00:1a:1b:00:22:aa"
            }, 
            "ethernet-type": {
                "type": 2048
            }, 
            "ethernet-destination": {
                "address": "00:2b:00:60:ff:f1"
            }
        }
    }, 
    "instructions": {
        "instruction": [
            {
                "order": 0, 
                "apply-actions": {
                    "action": [
                        {
                            "output-action": {
                                "max-length": 60, 
                                "output-node-connector": "CONTROLLER"
                            }, 
                            "order": 0
                        }
                    ]
                }
            }
        ]
    }
}


<<< Delete flow with id of '15' from the Controller's cache and from the table '0' on the 'openflow:1' node
<<< Flow successfully removed from the Controller


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo 8 Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< 'Controller': 192.168.59.103, 'OpenFlow' switch: 'openflow:1'


<<< Set OpenFlow flow on the Controller
        Match:  Ethernet Type (0x800)
                Ethernet Source Address (00:1c:01:00:23:aa)
                Ethernet Destination Address (00:02:02:60:ff:fe)
                IPv4 Source Address (10.0.245.1/24)
                IPv4 Destination Address (192.168.1.123/16)
                IP Protocol Number (56)
                IP DSCP (24)
                Input Port (13)
        Action: Output (CONTROLLER)


<<< Flow to send:
{
    "flow-node-inventory:flow": {
        "cookie": 100, 
        "cookie_mask": 255, 
        "id": 15, 
        "instructions": {
            "instruction": [
                {
                    "apply-actions": {
                        "action": [
                            {
                                "order": 0, 
                                "output-action": {
                                    "max-length": 60, 
                                    "output-node-connector": "CONTROLLER"
                                }
                            }
                        ]
                    }, 
                    "order": 0
                }
            ]
        }, 
        "match": {
            "ethernet-match": {
                "ethernet-destination": {
                    "address": "00:02:02:60:ff:fe"
                }, 
                "ethernet-source": {
                    "address": "00:1c:01:00:23:aa"
                }, 
                "ethernet-type": {
                    "type": 2048
                }
            }, 
            "in-port": 13, 
            "ip-match": {
                "ip-dscp": 24, 
                "ip-protocol": 56
            }, 
            "ipv4-destination": "192.168.1.123/16", 
            "ipv4-source": "10.0.245.1/24"
        }, 
        "priority": 1006, 
        "table_id": 0
    }
}
<<< Flow successfully added to the Controller


<<< Get configured flow from the Controller
<<< Flow successfully read from the Controller
Flow info:
{
    "cookie_mask": 255, 
    "priority": 1006, 
    "table_id": 0, 
    "cookie": 100, 
    "id": "15", 
    "match": {
        "ipv4-destination": "192.168.1.123/16", 
        "ip-match": {
            "ip-dscp": 24, 
            "ip-protocol": 56
        }, 
        "in-port": "13", 
        "ipv4-source": "10.0.245.1/24", 
        "ethernet-match": {
            "ethernet-source": {
                "address": "00:1c:01:00:23:aa"
            }, 
            "ethernet-type": {
                "type": 2048
            }, 
            "ethernet-destination": {
                "address": "00:02:02:60:ff:fe"
            }
        }
    }, 
    "instructions": {
        "instruction": [
            {
                "order": 0, 
                "apply-actions": {
                    "action": [
                        {
                            "output-action": {
                                "max-length": 60, 
                                "output-node-connector": "CONTROLLER"
                            }, 
                            "order": 0
                        }
                    ]
                }
            }
        ]
    }
}


<<< Delete flow with id of '15' from the Controller's cache and from the table '0' on the 'openflow:1' node
<<< Flow successfully removed from the Controller


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< Demo 9 Start
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<<< 'Controller': 192.168.59.103, 'OpenFlow' switch: 'openflow:1'


<<< Set OpenFlow flow on the Controller
        Match:  Ethernet Type (0x800)
                Ethernet Source Address (00:00:00:11:23:ae)
                Ethernet Destination Address (ff:ff:29:01:19:61)
                IPv4 Source Address (17.1.2.3/8)
                IPv4 Destination Address (172.168.5.6/16)
                IP Protocol Number (6)
                IP DSCP (12)
                TCP Source Port Number (25364)
                TCP Destination Port Number (8080)
                Input Port (13)
        Action: Output (NORMAL)


<<< Flow to send:
{
    "flow-node-inventory:flow": {
        "cookie": 101, 
        "cookie_mask": 255, 
        "id": 16, 
        "instructions": {
            "instruction": [
                {
                    "apply-actions": {
                        "action": [
                            {
                                "order": 0, 
                                "output-action": {
                                    "output-node-connector": "NORMAL"
                                }
                            }
                        ]
                    }, 
                    "order": 0
                }
            ]
        }, 
        "match": {
            "ethernet-match": {
                "ethernet-destination": {
                    "address": "ff:ff:29:01:19:61"
                }, 
                "ethernet-source": {
                    "address": "00:00:00:11:23:ae"
                }, 
                "ethernet-type": {
                    "type": 2048
                }
            }, 
            "in-port": 13, 
            "ip-match": {
                "ip-dscp": 12, 
                "ip-protocol": 6
            }, 
            "ipv4-destination": "172.168.5.6/16", 
            "ipv4-source": "17.1.2.3/8", 
            "tcp-destination-port": 8080, 
            "tcp-source-port": 25364
        }, 
        "priority": 1007, 
        "table_id": 0
    }
}
<<< Flow successfully added to the Controller


<<< Get configured flow from the Controller
<<< Flow successfully read from the Controller
Flow info:
{
    "cookie_mask": 255, 
    "priority": 1007, 
    "table_id": 0, 
    "cookie": 101, 
    "id": "16", 
    "match": {
        "ipv4-source": "17.1.2.3/8", 
        "ethernet-match": {
            "ethernet-source": {
                "address": "00:00:00:11:23:ae"
            }, 
            "ethernet-type": {
                "type": 2048
            }, 
            "ethernet-destination": {
                "address": "ff:ff:29:01:19:61"
            }
        }, 
        "ip-match": {
            "ip-dscp": 12, 
            "ip-protocol": 6
        }, 
        "tcp-destination-port": 8080, 
        "tcp-source-port": 25364, 
        "ipv4-destination": "172.168.5.6/16", 
        "in-port": "13"
    }, 
    "instructions": {
        "instruction": [
            {
                "order": 0, 
                "apply-actions": {
                    "action": [
                        {
                            "output-action": {
                                "output-node-connector": "NORMAL"
                            }, 
                            "order": 0
                        }
                    ]
                }
            }
        ]
    }
}


<<< Delete flow with id of '16' from the Controller's cache and from the table '0' on the 'openflow:1' node
<<< Flow successfully removed from the Controller


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>> Demo End
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
