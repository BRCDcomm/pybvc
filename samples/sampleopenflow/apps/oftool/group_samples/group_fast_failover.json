/*****************************************************************************
    
    Example of a JSON encoded OpenFlow group table entry
    
    NOTE1: For each JSON encoded group entry the 'group-id' and 'group-type'
           are the must fields
    NOTE2: All numerical data should be encoded in decimal
    NOTE3: This JSON document can be annotated with comments that will be
           stripped off by the 'oftool' preprocessor when this file is used
           for configuring groups on a target device.
           o Multi-line comments:
            - start with '/*' and end with '*/'
            - can be split over multiple lines
            - any symbols written between '/*' and '*/' are ignored
            - comments cannot be nested
           o Single line comments:
            - start with '//' and span to the end of the line
            - can show up on lines by themselves or to the right of JSON
              statement on a line
            - the text after '//' is ignored
            - cannot be used inside JSON statements
    
 *****************************************************************************/

{
    /*
     * Group definition per OpenFlow specification:
     *  o Execute the first live bucket. Each action bucket is associated
     *    with a specific port and/or group that controls its liveness.
     *    The buckets are evaluated in the order defined by the group, and
     *    the first bucket which is associated with a live port/group is
     *    selected. If no buckets are live, packets are dropped. This group
     *    type must implement a liveness mechanism.
     */
     
    "group-id": 15,                         // unique identifier of the group
                                            // on the OpenFlow switch
                                            // (mandatory)
    "group-type": "group-ff",               // Determines this group semantic
                                            // (mandatory)
    "group-name": "FAST-FAILOVER group",    // this group name
                                            // (optional, default is 'none')
     
    /*
     * Action buckets associated with the group
     * (each bucket contains one or more actions to execute)
     */
    "buckets": {
        "bucket": [
            { // First bucket
                "bucket-id": 0,
                "watch_port": 110,
                "action": [ // Actions to execute
                    { // First action
                        "order": 0, 
                        "output-action": {
                            "output-node-connector": 110
                        }
                    }
                ]
            },
            { // Second bucket
                "bucket-id": 1,
                "watch_port": 111,
                "action": [ // Actions to execute
                    { // First action
                        "order": 0, 
                        "output-action": {
                            "output-node-connector": 111
                        }
                    }
                ]
            },
            { // Third bucket
                "bucket-id": 2, 
                "watch_port": 112,
                "action": [ // Actions to execute
                    { // First action
                        "order": 0, 
                        "output-action": {
                            "output-node-connector": 112
                        }
                    }
                ]
            }
        ]
    }
}
